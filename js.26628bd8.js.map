{"version":3,"sources":["src/js/core/creative-transformers.js","src/js/core/transformers.js","src/js/ui/animations.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","src/js/index.js","node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["shakespeareanTransformer","error","errorType","split","middles","TypeError","ReferenceError","SyntaxError","Default","randomItem","filmNoirTransformer","sciFiTransformer","pirateTransformer","westernTransformer","superheroTransformer","fantasyTransformer","bMovieTransformer","influencerTransformer","legalTransformer","recipeTransformer","sportsTransformer","array","Math","floor","random","length","_creativeTransformers","require","confuciusTransformer","errorDetails","actions","RangeError","template","action","consequence","solution","requirement","subject","includes","replace","haikuTransformer","secondLines","blameTransformer","tarotTransformer","cards","card","position","interpretation","upright","reverse","selectedAdvice","motivationalTransformer","titles","techSupportTransformer","causes","errorCodes","cause","workaround","severity","successRate","errorCode","poeticTransformer","middleLines","zenTransformer","CookieAnimator","constructor","options","crackDuration","paperDuration","paperDelay","animationsEnabled","setAnimationsEnabled","enabled","createCookieSVG","crackCookie","cookieElement","Promise","resolve","classList","add","setTimeout","showFortune","fortuneContent","reset","remove","_default","exports","default","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","loadBundlesLazy","bundles","Array","isArray","id","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","_transformers","_animations","_interopRequireDefault","_html2canvas","__esModule","ErrorFortune","config","animation","defaultStyle","defaultTheme","maxHistory","maxFavorites","elements","animator","applySystemTheme","themeToApply","window","matchMedia","themeRadio","document","querySelector","checked","fortuneDisplay","getElementById","contains","forEach","theme","handleFormSubmit","preventDefault","errorMessage","errorInput","value","trim","input","message","clearValidationError","errorElement","createElement","className","textContent","parentNode","insertBefore","nextSibling","focus","showValidationError","styleRadio","crack","style","target","nonce","Date","now","removeChild","opts","callback","saveToHistory","targetElement","fortune","innerHTML","wisdom","transformers","confucius","original","timestamp","toISOString","generateFortune","history","getHistory","unshift","toString","localStorage","setItem","JSON","stringify","historyContainer","loadHistory","addToHistory","setAttribute","fortuneElement","cookieContainer","appendChild","wisdomElement","favoriteBtn","addEventListener","addToFavorites","updateFavoriteButtonState","animateSequence","liveRegion","body","announceToScreenReader","displayFortune","fortuneActions","embedCodeDisplay","escapeHtml","jsApiDisplay","updateEmbedCode","console","retryButton","form","dispatchEvent","Event","showErrorState","showEmbedCode","embedSection","scrollIntoView","behavior","copyAsImage","button","originalText","disabled","generateFortuneImage","imageUrl","fetch","res","blob","navigator","clipboard","write","ClipboardItem","showToast","open","finally","downloadFortune","link","href","download","getTime","click","element","clone","cloneNode","left","top","branding","html2canvas","backgroundColor","scale","logging","allowTaint","useCORS","canvas","toDataURL","copyLink","URL","location","searchParams","set","encodeURIComponent","copyToClipboard","shareToSocial","platform","shareUrl","shareText","shareWindow","toastContainer","toast","text","isSecureContext","writeText","fallbackCopyToClipboard","textarea","opacity","select","execCommand","alert","html","div","haiku","tarot","blame","motivational","techSupport","poetic","zen","shakespeare","filmNoir","sciFi","pirate","western","superhero","fantasy","bMovie","influencer","legal","recipe","sports","getItem","parse","lazy","historyItem","createFortuneItem","loadMoreBtn","favorites","getFavorites","existingIndex","findIndex","f","splice","favoritesContainer","loadFavorites","favoriteItem","item","dataset","header","toLocaleString","content","restoreFortune","key","some","title","init","heroCookie","styleOptions","querySelectorAll","themeOptions","tabButtons","tabPanes","option","opt","tabName","getAttribute","btn","pane","copyImageBtn","copyLinkBtn","downloadBtn","embedCodeBtn","twitterBtn","facebookBtn","linkedinBtn","copyEmbedBtn","copyJsBtn","bindEvents","customElements","get","define","HTMLElement","connectedCallback","hasAttribute","tooltip","useSystemTheme","savedPreference","darkModeMediaQuery","setupSystemThemeDetection","urlParams","URLSearchParams","search","errorParam","decodeURIComponent","checkUrlParameters","skipLink","firstChild","addSkipLink","requestIdleCallback","cleanupOldData","lazyLoadObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","unobserve","historySectionEl","favoritesSectionEl","observe","optimizePerformance","log","exportData","data","exportDate","dataStr","dataUri","exportFileDefaultName","linkElement","importData","file","reader","FileReader","onload","result","readAsText","readyState","script","async","charset","src","onerror","getElementsByTagName"],"mappings":"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","file":"js.26628bd8.js","sourceRoot":"..","sourcesContent":["// Additional transformers for Error Message Fortune Cookies\n// These transformers convert error messages into various creative styles\n\n/**\n * Transform error into a Shakespearean style response\n * @param {string} error - The error message\n * @returns {string} Shakespearean response\n */\nfunction shakespeareanTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Shakespearean phrases and templates\n  const openings = [\n    \"Alas, what tragedy befalls thy code!\",\n    \"O woeful error, what sorrow thou bringest!\",\n    \"What manner of beast is this error I see before me?\",\n    \"Hark! A most grievous fault appears!\",\n    \"To err or not to err, that is the question.\",\n    \"Friends, Romans, coders, lend me your ears; I come to debug thy code, not to praise it.\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"The types doth protest too much, methinks.\",\n      \"What's in a type? That which we call undefined by any other name would still crash as deep.\",\n      \"This TypeError, like a poison'd chalice, brings ruin to thy program's lips.\"\n    ],\n    ReferenceError: [\n      \"The variable, it seems, has shuffled off this mortal coil.\",\n      \"This reference, like a ghost, doth fade before our grasp.\",\n      \"Out, out, brief reference! Life's but a walking shadow, a poor player that struts and frets his hour upon the stage and then is heard no more.\"\n    ],\n    SyntaxError: [\n      \"Thy syntax hath more gaps than a peasant's teeth.\",\n      \"The brackets fall in disarray, like soldiers fleeing from the battlefield.\",\n      \"Something is rotten in the state of thy syntax.\"\n    ],\n    Default: [\n      \"The fault, dear programmer, is not in our stars, but in our code.\",\n      \"All the world's a stage, and all the errors merely players.\",\n      \"Uneasy lies the head that wears the crown of debugging.\"\n    ]\n  };\n  \n  const closings = [\n    \"Shall we proceed with the debugging most foul?\",\n    \"What light through yonder console breaks? It is the solution, and wisdom is the sun.\",\n    \"Parting is such sweet sorrow, that I shall debug 'til it be morrow.\",\n    \"Now is the winter of our discontent made glorious summer by this fixed bug.\",\n    \"All's well that ends well, once thy error is vanquished.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Shakespearean verse\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Film Noir detective style\n * @param {string} error - The error message\n * @returns {string} Film Noir response\n */\nfunction filmNoirTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Film Noir phrases and templates\n  const openings = [\n    \"It was a dark and stormy night when the error crept in.\",\n    \"The bug slipped into my code like a dame with a secret.\",\n    \"I knew this function was trouble the moment I laid eyes on it.\",\n    \"The console was as black as my coffee and twice as bitter.\",\n    \"The error hit me like a freight train on a cold Monday morning.\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"Types don't lie, kid. But programmers? They lie all the time.\",\n      \"The type was all wrong, like a penguin at a desert party.\",\n      \"I've seen some type mismatches in my day, but this one took the cake.\"\n    ],\n    ReferenceError: [\n      \"The reference was missing, like a witness who skipped town before the trial.\",\n      \"Null and undefined. The perfect alibi. Too perfect, if you ask me.\",\n      \"The variable vanished without a trace. No forwarding address, no goodbye note.\"\n    ],\n    SyntaxError: [\n      \"The syntax was broken, like my spirit after a three-day debugging bender.\",\n      \"Brackets and parentheses scattered like evidence at a crime scene.\",\n      \"The code was a mess, like my office after a visit from the syntax police.\"\n    ],\n    Default: [\n      \"This error's got more layers than a year-old onion.\",\n      \"Bugs don't just happen. Someone's always responsible.\",\n      \"I've been chasing this error for so long, I forgot what daylight looks like.\"\n    ]\n  };\n  \n  const closings = [\n    \"I'll fix it, but it won't be pretty. Nothing in this town ever is.\",\n    \"Some errors you fix. Others... they fix you.\",\n    \"In the end, it's always the semicolons that get you.\",\n    \"I'll solve this case if it's the last thing I do.\",\n    \"Another day, another bug. That's just how it goes in this business.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Film Noir style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Sci-Fi technobabble style\n * @param {string} error - The error message\n * @returns {string} Sci-Fi response\n */\nfunction sciFiTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Sci-Fi phrases and templates\n  const openings = [\n    \"Alert! Quantum fluctuation detected in the code matrix!\",\n    \"Captain's log, stardate 43.7: We've encountered an anomaly in the program continuum.\",\n    \"The code's dilithium crystals are experiencing a catastrophic cascade failure.\",\n    \"Warning: Temporal distortion detected in the algorithmic subspace.\",\n    \"The neural network's synaptic processors have encountered a logic paradox.\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"The type converters have failed to properly modulate the tachyon emissions.\",\n      \"A dimensional rift has caused quantum entanglement between incompatible data types.\",\n      \"The variable's molecular cohesion is breaking down at the subatomic level.\"\n    ],\n    ReferenceError: [\n      \"The referenced entity appears to have been pulled into a parallel memory dimension.\",\n      \"Scanners indicate the variable has been consumed by a void in the code-space continuum.\",\n      \"The quantum state of the reference has collapsed before observation.\"\n    ],\n    SyntaxError: [\n      \"The syntax matrix has been corrupted by an ion storm in sector 7G.\",\n      \"Grammatical particle accelerator malfunction detected in the code compiler.\",\n      \"The algorithmic universal translator has failed to interpret the command structure.\"\n    ],\n    Default: [\n      \"Our sensors detect a disturbance in the code-force.\",\n      \"The main deflector dish cannot compensate for this level of programming entropy.\",\n      \"The holographic code projection is experiencing a critical failure.\"\n    ]\n  };\n  \n  const closings = [\n    \"Recommend recalibrating the primary code arrays and reinitializing the debugging sequence.\",\n    \"We must reverse the polarity of the neutron flow to restore system functionality.\",\n    \"Only by realigning the quantum harmonics can we hope to resolve this paradox.\",\n    \"Initiating emergency protocol: Ctrl-Alt-Delete Prime Directive.\",\n    \"Perhaps we can bypass the main power coupling and route around the damaged code sectors.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Sci-Fi style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Pirate style response\n * @param {string} error - The error message\n * @returns {string} Pirate response\n */\nfunction pirateTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Pirate phrases and templates\n  const openings = [\n    \"Shiver me timbers!\",\n    \"Blimey! What have ye done to me code?\",\n    \"Arrr! There be a problem with yer program, matey!\",\n    \"Avast ye! There be bugs in these waters!\",\n    \"Yo ho ho! A troublesome error has been spotted off the starboard bow!\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"Ye tried to make a string walk the plank with numbers, ye scurvy dog!\",\n      \"Yer types be mismatched like a one-legged pirate with two peg legs!\",\n      \"The type ye seek be buried with the rest of the treasure, it be!\"\n    ],\n    ReferenceError: [\n      \"The variable ye be lookin' for has sailed to Davy Jones' locker!\",\n      \"Ye can't reference what ain't there, ye addlebrained swabbie!\",\n      \"That reference be as missing as me gold-plated hook!\"\n    ],\n    SyntaxError: [\n      \"Yer syntax be more mangled than a kraken's tentacles!\",\n      \"Ye've got more misplaced brackets than I've got bottles o' rum!\",\n      \"Yer code structure be fallin' apart like a ship in a maelstrom!\"\n    ],\n    Default: [\n      \"This error be giving me more grief than a plank-walking ceremony!\",\n      \"I've seen cleaner code written by a drunken sea cook!\",\n      \"Yer program be leakin' worse than me old ship in a storm!\"\n    ]\n  };\n  \n  const closings = [\n    \"Fix it quick, or it's the plank for ye!\",\n    \"Best be debuggin' before the tide comes in!\",\n    \"Splice the mainbrace and fix the code, or face the captain's wrath!\",\n    \"May the winds of good fortune help ye find the bug, or ye be marooned!\",\n    \"Batten down the hatches and prepare to debug, me hearty!\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Pirate style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Cowboy Western style\n * @param {string} error - The error message\n * @returns {string} Western response\n */\nfunction westernTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Western phrases and templates\n  const openings = [\n    \"Whoa there, partner!\",\n    \"Well, I'll be a rattlesnake's uncle!\",\n    \"Hold your horses, cowboy!\",\n    \"This code's got more problems than a one-legged horse in a kickin' contest.\",\n    \"Looks like we got ourselves a situation here.\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"You're tryin' to fit a square peg in a round hole with them types.\",\n      \"Them types are more mixed up than a tumbleweed in a tornado.\",\n      \"You can't make a silk purse outta a sow's ear, and you sure can't make that type work here.\"\n    ],\n    ReferenceError: [\n      \"That reference is as gone as last year's tumbleweed.\",\n      \"You're chasin' after a reference that ain't never been roped.\",\n      \"That variable's done rode off into the sunset.\"\n    ],\n    SyntaxError: [\n      \"Your syntax is crookeder than a wagon trail over the Rockies.\",\n      \"Them brackets are scattered like cattle after a lightning storm.\",\n      \"This here syntax wouldn't pass muster at the O.K. Corral.\"\n    ],\n    Default: [\n      \"This error's meaner than a rattlesnake with a toothache.\",\n      \"You've got yourself in a real pickle, ain't ya?\",\n      \"This code's about as useful as a screen door on a submarine.\"\n    ]\n  };\n  \n  const closings = [\n    \"Best saddle up and fix it 'fore sundown.\",\n    \"Time to round up them bugs and drive 'em outta your code.\",\n    \"Ain't no use cryin' over spilt milk. Just clean up your code and move on.\",\n    \"You best get to fixin' this faster than a jackrabbit on a hot griddle.\",\n    \"Don't worry, even the best cowboys fall off their horse sometimes.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Western style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Superhero Comic style\n * @param {string} error - The error message\n * @returns {string} Superhero response\n */\nfunction superheroTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Superhero phrases and templates\n  const openings = [\n    \"Great Scott!\",\n    \"Holy runtime error, Batman!\",\n    \"By the power of clean code!\",\n    \"This looks like a job for Super-Debugger!\",\n    \"With great code comes great responsibility... and this isn't it!\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"The evil Type Mismatch has struck again, using its confusion ray!\",\n      \"Your code has been exposed to type kryptonite!\",\n      \"The Undefined Avenger has thwarted your variable's true identity!\"\n    ],\n    ReferenceError: [\n      \"Captain Reference has vanished from the codebase dimension!\",\n      \"The Variable Vanisher has struck, making your references disappear!\",\n      \"Your reference has been trapped in the Phantom Zone of memory!\"\n    ],\n    SyntaxError: [\n      \"The Syntax Smasher has left your code in ruins!\",\n      \"Your brackets have been scattered by the evil Parenthesis Paradox!\",\n      \"The Grammar Goblin has twisted your code into an unrecognizable form!\"\n    ],\n    Default: [\n      \"The Legion of Bugs has infiltrated your otherwise heroic code!\",\n      \"Your program's arch-nemesis, Error Man, strikes again!\",\n      \"The sinister Bug Brotherhood has sabotaged your algorithm!\"\n    ]\n  };\n  \n  const closings = [\n    \"Quick! To the Debug-mobile!\",\n    \"Never fear! Stack Overflow is here!\",\n    \"This looks like a job for Regular Expression Man!\",\n    \"With your IDE powers combined, you can overcome this villainous bug!\",\n    \"Remember: in the darkest debugging night, the green light of a passing test will guide you home!\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Superhero style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Medieval Fantasy style\n * @param {string} error - The error message\n * @returns {string} Fantasy response\n */\nfunction fantasyTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Fantasy phrases and templates\n  const openings = [\n    \"Behold, a curse has befallen thy code!\",\n    \"The ancient scrolls foretold of this error...\",\n    \"By the beard of Merlin!\",\n    \"A dark shadow has been cast upon thy program.\",\n    \"The oracles of programming have sent a warning.\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"The types have been enchanted by a mischievous sprite, causing chaos in the realm of variables.\",\n      \"Thy attempt to transmute one type into another has failed, as the alchemical formula was flawed.\",\n      \"The dragon of TypeError breathes its fiery breath upon thy code.\"\n    ],\n    ReferenceError: [\n      \"The variable thou seekest has been spirited away to the shadow realm.\",\n      \"Thy reference points to the void, where no data dwells.\",\n      \"The ghost of a deleted variable haunts thy code, leading thee astray.\"\n    ],\n    SyntaxError: [\n      \"Thy syntax is as twisted as a labyrinth designed by the Goblin King.\",\n      \"The ancient runes of thy code have been misaligned, breaking the spell.\",\n      \"The magical incantation is malformed, and thus the spell fails.\"\n    ],\n    Default: [\n      \"A curse most foul has corrupted thy algorithm.\",\n      \"The dark forces of chaos have infiltrated thy once-pristine code.\",\n      \"Thy program faces a trial by fire, and has been found wanting.\"\n    ]\n  };\n  \n  const closings = [\n    \"Seek the wisdom of the Elder Programmers to lift this curse.\",\n    \"Only the Sword of Debugging, forged in the fires of Stack Overflow, can vanquish this foe.\",\n    \"Cast the sacred spell of Console.log() to reveal the hidden truth.\",\n    \"The quest to fix this error shall be perilous, but rewarding.\",\n    \"May the gods of clean code guide thy hand in this dark hour.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Fantasy style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a 1950s Sci-Fi B-Movie style\n * @param {string} error - The error message\n * @returns {string} B-Movie response\n */\nfunction bMovieTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // B-Movie phrases and templates\n  const openings = [\n    \"ATTENTION, EARTHLINGS!\",\n    \"IT CAME FROM OUTER SPACE!\",\n    \"BEWARE THE BLOB OF BAD CODE!\",\n    \"INVASION OF THE BUG SNATCHERS!\",\n    \"THE DAY THE FUNCTION STOOD STILL!\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"A MONSTROUS TYPE MISMATCH HAS ESCAPED FROM LABORATORY X!\",\n      \"THE CREATURE FROM THE TYPE LAGOON IS ON THE LOOSE!\",\n      \"SCIENTISTS WARNED ABOUT MIXING THESE TYPES, BUT NO ONE LISTENED!\"\n    ],\n    ReferenceError: [\n      \"THE INVISIBLE VARIABLE STRIKES TERROR INTO THE HEARTS OF PROGRAMMERS!\",\n      \"REFERENCE VANISHED IN MYSTERIOUS CIRCUMSTANCES! FOUL PLAY SUSPECTED!\",\n      \"THE GHOST VARIABLE THAT HAUNTS YOUR CODE!\"\n    ],\n    SyntaxError: [\n      \"SYNTAX MUTATED BY MYSTERIOUS COSMIC RAYS!\",\n      \"ATTACK OF THE 50-FOOT PARSING ERROR!\",\n      \"THE BRACKETS CAME FROM BEYOND SPACE AND TIME!\"\n    ],\n    Default: [\n      \"ERROR OF UNKNOWN ORIGIN THREATENS MANKIND'S VERY EXISTENCE!\",\n      \"SCIENTISTS BAFFLED BY STRANGE CODE PHENOMENON!\",\n      \"THE THING THAT SHOULD NOT COMPILE!\"\n    ]\n  };\n  \n  const closings = [\n    \"ONLY A DESPERATE DEBUG SESSION CAN SAVE HUMANITY NOW!\",\n    \"CAN YOUR CODE BE SAVED, OR IS IT... TOO LATE?\",\n    \"WILL MANKIND SURVIVE THIS PROGRAMMING HORROR? TUNE IN NEXT WEEK!\",\n    \"THE END... OR IS IT JUST THE BEGINNING OF YOUR DEBUGGING NIGHTMARE?\",\n    \"COMING SOON: RETURN OF THE FIXED CODE!\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into B-Movie style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Social Media Influencer style\n * @param {string} error - The error message\n * @returns {string} Influencer response\n */\nfunction influencerTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Influencer phrases and templates\n  const openings = [\n    \"OMG you guys! 😱\",\n    \"So today I had THE WORST coding experience! 🙈\",\n    \"Hey fam! Don't you hate when this happens? 👇\",\n    \"STORY TIME! My code just... I can't even! 🤦‍♀️\",\n    \"Coding fail! But that's just part of the journey, right? 💯\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"I literally tried to use the wrong type and my code was like 'no thanks!' Major fail! 🙄\",\n      \"Type mismatch is my toxic trait, ngl! But we're all learning, right? 💕\",\n      \"My types are all over the place today! Not #sponsored by good programming practices lol! 🤣\"\n    ],\n    ReferenceError: [\n      \"That awkward moment when your variable ghosts you harder than my ex! 👻\",\n      \"I'm looking for this reference like it's my missing AirPods! Where did it go?! 🔍\",\n      \"This undefined reference is giving very much 'error' vibes! Not a vibe! 🚫\"\n    ],\n    SyntaxError: [\n      \"Syntax errors are my brand at this point! Bracket placement is NOT my superpower! 💁‍♀️\",\n      \"The way my syntax is just completely chaotic today! Mercury retrograde much? ♈\",\n      \"My code structure is messier than my room after a try-on haul! 👗\"\n    ],\n    Default: [\n      \"This error is literally living rent-free in my code right now! 🏠\",\n      \"Not me spending five hours debugging when I could be at brunch! 🥂\",\n      \"The algorithm is NOT working in my favor today! So unfair! 😤\"\n    ]\n  };\n  \n  const closings = [\n    \"Anyway, like and subscribe for more coding fails! 👍 #CodeLife #DevGirl\",\n    \"Drop a comment if this has happened to you! 💬 #ProgrammerProblems\",\n    \"Swipe up for my debugging routine! 👆 #SelfCare #CodeCare\",\n    \"Don't forget to check out my new debugging course! Link in bio! 🔗\",\n    \"Stay tuned for the fix reveal! ✨ #TransformationTuesday\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Influencer style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Legal Jargon style\n * @param {string} error - The error message\n * @returns {string} Legal response\n */\nfunction legalTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Legal phrases and templates\n  const openings = [\n    \"NOTICE OF DEFICIENCY:\",\n    \"WHEREAS, a certain error (hereinafter referred to as 'the Error') has been detected;\",\n    \"ATTENTION: You are hereby notified of a code violation pursuant to Section 404 of the Programming Code;\",\n    \"IN THE MATTER OF: Runtime Exception v. Your Code;\",\n    \"To Whom It May Concern: This letter serves as formal notification of non-compliance;\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"the party of the first part (the 'Type') has been incorrectly associated with the party of the second part (the 'Value'), constituting a breach of the Type Agreement;\",\n      \"a Type Mismatch has occurred, as defined in Appendix B, Paragraph 7, Subparagraph (iii) of the JavaScript Specification;\",\n      \"the aforementioned TypeError constitutes prima facie evidence of negligent type checking;\"\n    ],\n    ReferenceError: [\n      \"the referenced entity (hereinafter 'the Variable') was not properly declared or has been nullified prior to access, in violation of the Variable Scope Act;\",\n      \"the defendant (your code) attempted to access a reference without first establishing its existence, contrary to established precedent in 'Null v. Pointer' (2011);\",\n      \"the referenced property was not found within the object's enumerable properties, as required by Section 3.2 of the Object Property Access Protocol;\"\n    ],\n    SyntaxError: [\n      \"the syntax structure fails to conform to the grammatical requirements set forth in the Language Specification, revision 2.1;\",\n      \"improper bracket closure and/or semicolon omission has been detected, in direct contravention of the Code Formatting Guidelines;\",\n      \"the parser was unable to interpret the provided syntax, as it deviated substantially from accepted standards of code construction;\"\n    ],\n    Default: [\n      \"the code in question has failed to perform as reasonably expected by a programmer of ordinary skill in the art;\",\n      \"a material defect has been identified in the execution of the program, causing substantial impairment to its intended functionality;\",\n      \"the error constitutes a significant deviation from the expected behavior as documented in the relevant specifications;\"\n    ]\n  };\n  \n  const closings = [\n    \"REMEDY: You are advised to debug the offending code within thirty (30) days of this notice to avoid further complications.\",\n    \"THEREFORE, it is strongly recommended that immediate corrective action be taken to rectify this situation.\",\n    \"FAILURE to address this error may result in cascading failures and is undertaken at your own risk.\",\n    \"The injured party (the Program) reserves all rights and remedies available under the Debugging Protocol.\",\n    \"This error notice is issued without prejudice to any additional errors that may be discovered upon further code review.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Legal style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Transform error into a Cooking Recipe style\n * @param {string} error - The error message\n * @returns {string} Recipe response\n */\nfunction recipeTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Recipe phrases and templates\n  const openings = [\n    \"Recipe for Disaster: Error Soufflé\",\n    \"Bug Stew: A Troubleshooting Delicacy\",\n    \"Debugging Delight: A Step-by-Step Recipe\",\n    \"Code Correction Casserole: Family-Style Fix\",\n    \"Error-Free Coding: A Fresh Approach\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"Ingredients: 1 cup of confusion, 2 tablespoons of wrong data types, a pinch of hasty coding. Fold the wrong types together until thoroughly mixed up. Allow to crash for 2-3 minutes.\",\n      \"Take one String and attempt to blend with Number. Notice how they refuse to mix properly, causing your code batter to curdle and separate.\",\n      \"Your type mixture has failed to rise properly. You may have confused your ingredients, using a Boolean when the recipe clearly called for a String.\"\n    ],\n    ReferenceError: [\n      \"You seem to be missing a key ingredient: the variable should be prepared and declared before being added to your code mixture.\",\n      \"Preparation error: You've referenced an item not found in your pantry of variables. Check your ingredients list before proceeding.\",\n      \"This recipe requires all variables to be properly defined before mixing. Your attempt to use an undefined reference has left a bitter taste.\"\n    ],\n    SyntaxError: [\n      \"Your code batter contains lumps of mismatched brackets. Whisk thoroughly until smooth and properly nested.\",\n      \"The syntax has been overcooked. For best results, ensure all parentheses are properly paired and semicolons added to taste.\",\n      \"Your code grammar is underproofed. Allow brackets to rise in matching pairs before attempting to run your program.\"\n    ],\n    Default: [\n      \"This error has all the hallmarks of a rushed preparation. Slow down and follow each step of the algorithm carefully.\",\n      \"Your code needs more time to simmer. Rushing the debugging process will only lead to half-baked solutions.\",\n      \"This programming recipe has gone awry. Consider starting fresh with clean variables and well-structured functions.\"\n    ]\n  };\n  \n  const closings = [\n    \"Serving suggestion: Pair with a robust debugging tool and a glass of patience for best results.\",\n    \"Allow your solution to rest for 5 minutes before testing again. Garnish with comments and serve to satisfied users.\",\n    \"This recipe yields one working program. Store unused functions in an airtight container for future use.\",\n    \"For a variation, try adding more error handling to create a more robust flavor profile in your code.\",\n    \"Chef's note: Even experienced programmers occasionally burn their code. Don't be discouraged!\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Recipe style\n  return `${opening}<br><br>${middle}<br><br>${closing}`;\n}\n\n/**\n * Transform error into a Sports Commentary style\n * @param {string} error - The error message\n * @returns {string} Sports Commentary response\n */\nfunction sportsTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Sports phrases and templates\n  const openings = [\n    \"Ladies and gentlemen, we're witnessing a critical error in the fourth quarter of development!\",\n    \"Oh! Unbelievable! The code has hit a major snag with this error!\",\n    \"Welcome back to Code Center, where we're looking at a devastating bug in today's program.\",\n    \"This is just incredible! An unexpected error has appeared out of nowhere!\",\n    \"We've got a real nail-biter here as the developer faces a crucial error!\"\n  ];\n  \n  const middles = {\n    TypeError: [\n      \"The programmer went for a type conversion and—OH! Rejected completely! That's going to hurt the runtime!\",\n      \"We haven't seen type confusion like this since the infamous JavaScript Championship of '95!\",\n      \"The compiler is calling a foul on that type mismatch! That's going to set the development team back significantly!\"\n    ],\n    ReferenceError: [\n      \"The variable is nowhere to be found! It's like trying to pass to a player who's not even on the field!\",\n      \"This reference is coming up null, Bob! You hate to see a rookie mistake like this at this level of programming!\",\n      \"The code is looking for that reference, but it's been benched! Completely out of the execution context!\"\n    ],\n    SyntaxError: [\n      \"That syntax is all over the place! The brackets are not matched up, and the parser is not happy about it!\",\n      \"A devastating syntax error! The semicolons are missing, and the compiler is throwing the flag!\",\n      \"The indentation is inconsistent, the brackets are mismatched—this code is playing like it's their first day in the league!\"\n    ],\n    Default: [\n      \"This error is a game-changer, folks! The development team will need to regroup after this setback!\",\n      \"We're seeing some sloppy code execution here today. This error could have been avoided with proper testing!\",\n      \"The program has hit a wall! This is not what you want to see this late in the development cycle!\"\n    ]\n  };\n  \n  const closings = [\n    \"Let's see if they can debug their way out of this one! Back to you in the studio.\",\n    \"They'll need to take a timeout here and rethink their strategy before moving forward.\",\n    \"This is why you always, ALWAYS check your types before submitting your code, folks!\",\n    \"The clock is ticking! Can they fix this error before the deadline? Stay tuned!\",\n    \"That's going to be a tough bug to fix, but that's why they play the game, folks!\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into Sports Commentary style\n  return `${opening} ${middle} ${closing}`;\n}\n\n/**\n * Helper function to select a random item from an array\n * @param {Array} array - The array to select from\n * @returns {*} A random item from the array\n */\nfunction randomItem(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\n// Export transformers\nexport {\n  shakespeareanTransformer,\n  filmNoirTransformer,\n  sciFiTransformer,\n  pirateTransformer,\n  westernTransformer,\n  superheroTransformer,\n  fantasyTransformer,\n  bMovieTransformer,\n  influencerTransformer,\n  legalTransformer,\n  recipeTransformer,\n  sportsTransformer\n};","// Core transformation functions for Error Message Fortune Cookies\n// This file contains the logic for transforming error messages into different fortune styles\n\n/**\n * Transform an error message into a Confucius-style wisdom\n * @param {string} error - The error message\n * @returns {string} Confucius wisdom\n */\nfunction confuciusTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Templates for Confucius wisdom\n  const templates = [\n    \"Confucius say: Man who {action} {subject} find himself {consequence}.\",\n    \"Ancient wisdom tell us: Those who {action} will surely {consequence}.\",\n    \"Path to enlightenment never {action}. Wise developer {alternative}.\",\n    \"In garden of code, {subject} cannot grow without {requirement}.\",\n    \"Confucius say: {errorType} today leads to wisdom tomorrow, but only if you {solution}.\",\n    \"Developer who chases two bugs catches neither. Focus on {subject} first.\",\n    \"Code written in anger should be refactored in calm.\",\n    \"Before fixing bug, first understand why it exists.\",\n    \"Wise programmer knows difference between running code and correct code.\",\n    \"Bug that appears impossible usually has simple explanation hidden in {subject}.\"\n  ];\n  \n  // Actions based on error types\n  const actions = {\n    TypeError: [\"measure nothing\", \"confuse types\", \"expect stone to be water\"],\n    ReferenceError: [\"seek what does not exist\", \"reference shadows\", \"call upon ghost variables\"],\n    SyntaxError: [\"speak incorrect language\", \"misplace sacred symbols\", \"forget ancient grammar\"],\n    RangeError: [\"exceed boundaries\", \"ask too much of too little\", \"demand infinity from finite resource\"],\n    Default: [\"rush code\", \"skip testing\", \"ignore compiler wisdom\"]\n  };\n  \n  // Consequences\n  const consequences = [\n    \"coming up short\",\n    \"walking path of many bugs\",\n    \"drinking from empty cup\",\n    \"building house on shifting sand\",\n    \"chasing own tail for many hours\"\n  ];\n  \n  // Solutions/alternatives\n  const solutions = [\n    \"check twice, code once\",\n    \"consult ancient documentation\",\n    \"meditate upon types before using\",\n    \"seek wisdom in stack overflow\",\n    \"embrace power of console.log\"\n  ];\n  \n  // Requirements\n  const requirements = [\n    \"proper care\",\n    \"careful attention\",\n    \"correct types\",\n    \"initialization\",\n    \"defensive checking\"\n  ];\n  \n  // Select random elements\n  const template = randomItem(templates);\n  const action = randomItem(actions[errorType] || actions.Default);\n  const consequence = randomItem(consequences);\n  const solution = randomItem(solutions);\n  const requirement = randomItem(requirements);\n  \n  // Extract subject from error details or use defaults\n  let subject = \"code\";\n  if (errorDetails.includes(\"undefined\")) subject = \"undefined\";\n  else if (errorDetails.includes(\"null\")) subject = \"null value\";\n  else if (errorDetails.includes(\"property\")) subject = \"property\";\n  else if (errorDetails.includes(\"function\")) subject = \"function\";\n  \n  // Fill in the template\n  return template\n    .replace(\"{action}\", action)\n    .replace(\"{subject}\", subject)\n    .replace(\"{consequence}\", consequence)\n    .replace(\"{alternative}\", solution)\n    .replace(\"{solution}\", solution)\n    .replace(\"{errorType}\", errorType)\n    .replace(\"{requirement}\", requirement);\n}\n\n/**\n * Transform an error message into a haiku\n * @param {string} error - The error message\n * @returns {string} Error haiku\n */\nfunction haikuTransformer(error) {\n  // Extract error type\n  const errorType = error.split(':')[0] || 'Error';\n  \n  // First lines (5 syllables)\n  const firstLines = [\n    \"Silent exception\",\n    \"Code refuses work\",\n    \"Functions returning\",\n    \"Null pointer beckons\",\n    \"Variables lost\",\n    \"Error emerges\",\n    \"Broken promises\",\n    \"Logic collapses\",\n    \"Memory leaking\",\n    \"Syntax rejected\"\n  ];\n  \n  // Second lines (7 syllables)\n  const secondLines = {\n    TypeError: [\n      \"Types confused and mismatched now\",\n      \"String where number should have been\",\n      \"Expecting what was never there\"\n    ],\n    ReferenceError: [\n      \"Shadows in empty namespace\",\n      \"Calling names that don't exist\",\n      \"Reaching for a ghost variable\"\n    ],\n    SyntaxError: [\n      \"Grammar broken, parser weeps\",\n      \"Brackets missing their partners\",\n      \"Semicolons forgotten\"\n    ],\n    Default: [\n      \"Errors hiding in plain sight\",\n      \"Compiler speaks in riddles now\",\n      \"Logic twisted into knots\",\n      \"Algorithms falter, pause\",\n      \"Patterns broken by mistake\"\n    ]\n  };\n  \n  // Third lines (5 syllables)\n  const thirdLines = [\n    \"Debug through the night\",\n    \"Stack trace tells no lies\",\n    \"Restart and try again\",\n    \"Silence fills the screen\",\n    \"Code begins to break\",\n    \"Tests reveal the truth\",\n    \"Fix one, break two more\",\n    \"Wisdom comes from pain\",\n    \"Coffee grows too cold\",\n    \"Time to take a walk\"\n  ];\n  \n  // Select random lines\n  const firstLine = randomItem(firstLines);\n  const secondLine = randomItem(secondLines[errorType] || secondLines.Default);\n  const thirdLine = randomItem(thirdLines);\n  \n  // Combine into haiku\n  return `${firstLine}<br>${secondLine}<br>${thirdLine}`;\n}\n\n/**\n * Transform error into blame deflection\n * @param {string} error - The error message\n * @returns {string} Blame deflection\n */\nfunction blameTransformer(error) {\n  const excuses = [\n    \"This error is clearly due to a cosmic ray flipping a bit in memory. Not your fault at all!\",\n    \"Mercury is in retrograde, affecting all pointer arithmetic in your timezone.\",\n    \"Your code is perfect. It's the laws of physics that are wrong today.\",\n    \"A temporal anomaly in the server room has caused your variables to time travel.\",\n    \"Quantum fluctuations in the CPU have created an alternate reality where this code doesn't work.\",\n    \"Your keyboard has been secretly autocorrecting your perfect code into errors.\",\n    \"The alignment of Wi-Fi waves with the office building is creating interference patterns in your logic.\",\n    \"The compiler is clearly in a bad mood today. Try again when it's feeling better.\",\n    \"Your code worked fine until someone made eye contact with the server.\",\n    \"The error is actually a feature if you look at it from a non-Euclidean perspective.\",\n    \"Your code is correct in at least 14 parallel universes.\",\n    \"The error is due to sunspot activity interfering with your garbage collector.\",\n    \"Your algorithm is too advanced for current hardware to understand properly.\",\n    \"The bug is actually a misunderstood feature trying to express itself.\",\n    \"This is clearly the result of a butterfly flapping its wings in Brazil last week.\"\n  ];\n  \n  return randomItem(excuses);\n}\n\n/**\n * Transform error into tarot card reading\n * @param {string} error - The error message\n * @returns {string} Tarot reading\n */\nfunction tarotTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  \n  // Define tarot cards based on error types\n  const cards = {\n    TypeError: [\"The Type Mismatch\", \"The Undefined Variable\", \"The Null Object\"],\n    ReferenceError: [\"The Missing Reference\", \"The Uninitialized Variable\", \"The Empty Scope\"],\n    SyntaxError: [\"The Broken Syntax\", \"The Mismatched Bracket\", \"The Missing Semicolon\"],\n    RangeError: [\"The Boundary Crosser\", \"The Infinite Loop\", \"The Stack Overflow\"],\n    Default: [\"The Bug\", \"The Compiler Warning\", \"The Runtime Exception\"]\n  };\n  \n  // Select appropriate card or fallback to default\n  const card = randomItem(cards[errorType] || cards.Default);\n  \n  // Determine if card is upright or reversed\n  const position = Math.random() > 0.5 ? \"upright\" : \"reverse\";\n  \n  // Templates for readings\n  const templates = [\n    \"The card {card} appears in {position} position. {interpretation} {advice}\",\n    \"Your code reveals {card}, {position}. {interpretation} {advice}\",\n    \"The digital tarot shows {card} in {position} alignment. {interpretation} {advice}\"\n  ];\n  \n  // Interpretations based on position\n  const interpretations = {\n    upright: [\n      \"This suggests a clear path forward once you address the fundamental issue.\",\n      \"You are facing a challenge that requires careful attention to detail.\",\n      \"A solution exists but may require looking at your code from a new perspective.\"\n    ],\n    reverse: [\n      \"This indicates hidden complexity that isn't immediately obvious.\",\n      \"You may be overlooking something simple in your pursuit of a complex solution.\",\n      \"The true source of your problem lies elsewhere in your code.\"\n    ]\n  };\n  \n  // Advice to give\n  const advice = [\n    \"Patience with syntax will reveal the proper path.\",\n    \"Consider stepping away and returning with fresh eyes.\",\n    \"The documentation holds the key to your salvation.\",\n    \"Seek wisdom from those who have faced this error before.\",\n    \"A careful review of your types will bring harmony.\"\n  ];\n  \n  // Select random template and advice\n  const template = randomItem(templates);\n  const interpretation = randomItem(interpretations[position]);\n  const selectedAdvice = randomItem(advice);\n  \n  // Fill in the template\n  return template\n    .replace(\"{card}\", card)\n    .replace(\"{position}\", position)\n    .replace(\"{interpretation}\", interpretation)\n    .replace(\"{advice}\", selectedAdvice);\n}\n\n/**\n * Transform error into motivational poster text\n * @param {string} error - The error message\n * @returns {string} Motivational text\n */\nfunction motivationalTransformer(error) {\n  // Extract error type\n  const errorType = error.split(':')[0] || 'Error';\n  \n  // Sample titles\n  const titles = {\n    TypeError: [\"TYPE MISMATCH\", \"EXPECTATION\", \"CONFUSION\"],\n    ReferenceError: [\"UNDEFINED\", \"MISSING\", \"ABSENCE\"],\n    SyntaxError: [\"SYNTAX\", \"STRUCTURE\", \"GRAMMAR\"],\n    Default: [\"PERSISTENCE\", \"DEBUGGING\", \"RESILIENCE\"]\n  };\n  \n  // Sample quotes\n  const quotes = [\n    \"It's not about avoiding errors; it's about how elegantly you handle them.\",\n    \"The error message is the first step on the road to a solution.\",\n    \"Behind every great program is a developer who refused to give up on a stubborn bug.\",\n    \"Errors are just the universe's way of telling you there's a more creative solution.\",\n    \"The difference between a junior and senior developer is how they react to the same error message.\",\n    \"Debugging is like being the detective in a crime movie where you are also the murderer.\",\n    \"Your code doesn't have to be perfect. It just has to be better than it was yesterday.\",\n    \"The most valuable line in your program is the one that shows you where you went wrong.\",\n    \"Success is not the absence of errors, but the presence of solutions.\",\n    \"The path to clean code is paved with a thousand error messages.\"\n  ];\n  \n  // Select appropriate title or fallback to default\n  const title = randomItem(titles[errorType] || titles.Default);\n  \n  // Select random quote\n  const quote = randomItem(quotes);\n  \n  // Format as motivational poster\n  return `<strong>${title}</strong><br><br>${quote}`;\n}\n\n/**\n * Helper function to select a random item from an array\n * @param {Array} array - The array to select from\n * @returns {*} A random item from the array\n */\nfunction randomItem(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\n/**\n * Transform error into a tech support style response\n * @param {string} error - The error message\n * @returns {string} Tech support response\n */\nfunction techSupportTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Templates for tech support responses\n  const templates = [\n    \"Have you tried turning it off and on again? {errorType} errors often resolve themselves after a system restart.\",\n    \"According to our database, this {errorType} issue affects 1 in {random} developers. The recommended solution is to {solution}.\",\n    \"Our automated diagnostic system has detected a {errorType}. This is typically caused by {cause}. We suggest you {solution}.\",\n    \"Error code: {errorCode}. This {errorType} requires immediate attention. Please {solution} to prevent data corruption.\",\n    \"This appears to be a known issue with {subject}. Our engineers are working on a patch. In the meantime, please {workaround}.\",\n    \"Your system has encountered a {errorType}. This is usually related to {cause}. Have you tried {solution}?\",\n    \"Technical analysis: {errorType} detected in {subject}. Recommended action: {solution}. Estimated success rate: {successRate}%.\",\n    \"We've received your error report about {errorType}. This is a {severity} issue that can be resolved by {solution}.\",\n    \"Our AI has analyzed your {errorType} and determined it's {severity}. The quickest fix is to {solution}.\",\n    \"This {errorType} has been added to our tracking system. Reference number: {errorCode}. Please {solution} while we investigate.\"\n  ];\n  \n  // Causes based on error types\n  const causes = {\n    TypeError: [\"inconsistent data types\", \"unexpected null values\", \"type coercion issues\"],\n    ReferenceError: [\"undefined variables\", \"scope problems\", \"missing imports\"],\n    SyntaxError: [\"incorrect syntax\", \"missing delimiters\", \"invalid expressions\"],\n    RangeError: [\"values outside acceptable ranges\", \"stack overflow\", \"excessive recursion\"],\n    Default: [\"configuration issues\", \"environment variables\", \"dependency conflicts\"]\n  };\n  \n  // Solutions\n  const solutions = [\n    \"clear your browser cache and try again\",\n    \"update all dependencies to their latest versions\",\n    \"check your network connection and retry\",\n    \"reinstall the application\",\n    \"verify your configuration settings\",\n    \"run the diagnostic tool in our support portal\",\n    \"implement the workaround described in our knowledge base article #KB{errorCode}\",\n    \"contact our support team with the error code\"\n  ];\n  \n  // Workarounds\n  const workarounds = [\n    \"use the legacy API endpoint temporarily\",\n    \"disable the problematic feature until the next update\",\n    \"switch to compatibility mode\",\n    \"use our command-line tool instead of the GUI\",\n    \"implement the manual override procedure\"\n  ];\n  \n  // Severity levels\n  const severities = [\"critical\", \"major\", \"moderate\", \"minor\", \"cosmetic\"];\n  \n  // Success rates\n  const successRates = [99, 95, 90, 85, 80, 75, 70];\n  \n  // Random numbers\n  const randoms = [10, 20, 50, 100, 200, 500, 1000];\n  \n  // Error codes\n  const errorCodes = [\"E\" + Math.floor(Math.random() * 900 + 100), \n                     \"X\" + Math.floor(Math.random() * 9000 + 1000),\n                     \"ERR-\" + Math.floor(Math.random() * 90 + 10)];\n  \n  // Select random elements\n  const template = randomItem(templates);\n  const cause = randomItem(causes[errorType] || causes.Default);\n  const solution = randomItem(solutions);\n  const workaround = randomItem(workarounds);\n  const severity = randomItem(severities);\n  const successRate = randomItem(successRates);\n  const random = randomItem(randoms);\n  const errorCode = randomItem(errorCodes);\n  \n  // Extract subject from error details or use defaults\n  let subject = \"your code\";\n  if (errorDetails.includes(\"undefined\")) subject = \"undefined variables\";\n  else if (errorDetails.includes(\"null\")) subject = \"null values\";\n  else if (errorDetails.includes(\"property\")) subject = \"object properties\";\n  else if (errorDetails.includes(\"function\")) subject = \"function calls\";\n  \n  // Fill in the template\n  return template\n    .replace(\"{errorType}\", errorType)\n    .replace(\"{subject}\", subject)\n    .replace(\"{cause}\", cause)\n    .replace(\"{solution}\", solution)\n    .replace(\"{workaround}\", workaround)\n    .replace(\"{severity}\", severity)\n    .replace(\"{successRate}\", successRate)\n    .replace(\"{random}\", random)\n    .replace(\"{errorCode}\", errorCode);\n}\n\n/**\n * Transform error into a poetic verse\n * @param {string} error - The error message\n * @returns {string} Poetic verse\n */\nfunction poeticTransformer(error) {\n  // Extract error type\n  const errorType = error.split(':')[0] || 'Error';\n  \n  // First lines\n  const firstLines = [\n    \"In the silent depths of code,\",\n    \"Through the labyrinth of logic,\",\n    \"When the compiler speaks its truth,\",\n    \"Amidst the forest of algorithms,\",\n    \"Between the brackets and the braces,\",\n    \"As functions call into the void,\",\n    \"Where variables lose their meaning,\",\n    \"In the dance of ones and zeros,\",\n    \"Through the mist of abstraction,\",\n    \"When syntax fails its promise,\"\n  ];\n  \n  // Middle lines based on error types\n  const middleLines = {\n    TypeError: [\n      \"A type, misunderstood, rebels.\",\n      \"Confusion blooms between the types.\",\n      \"The shape of data twists and turns.\"\n    ],\n    ReferenceError: [\n      \"A name is called that never was.\",\n      \"Echoes of undefined resound.\",\n      \"A reference points to emptiness.\"\n    ],\n    SyntaxError: [\n      \"Grammar breaks its ancient rules.\",\n      \"The language bends until it breaks.\",\n      \"Symbols stand in wrong formation.\"\n    ],\n    RangeError: [\n      \"Boundaries crossed without consent.\",\n      \"The limits of the possible emerge.\",\n      \"Infinity confronts its edges.\"\n    ],\n    Default: [\n      \"An error rises from the deep.\",\n      \"The unexpected manifests.\",\n      \"Logic falters in its path.\",\n      \"The code reveals its hidden flaw.\"\n    ]\n  };\n  \n  // Last lines\n  const lastLines = [\n    \"Yet in failure, wisdom grows.\",\n    \"Debug, and rise again renewed.\",\n    \"In errors, truth is often found.\",\n    \"The solution waits for patient eyes.\",\n    \"Tomorrow's code will stand more strong.\",\n    \"Each error teaches what we need.\",\n    \"The path to mastery winds through bugs.\",\n    \"From broken code comes deeper sight.\",\n    \"The greatest code was born from flaws.\",\n    \"In the ashes of errors, perfection blooms.\"\n  ];\n  \n  // Select random lines\n  const firstLine = randomItem(firstLines);\n  const middleLine = randomItem(middleLines[errorType] || middleLines.Default);\n  const lastLine = randomItem(lastLines);\n  \n  // Combine into verse\n  return `${firstLine}<br>${middleLine}<br>${lastLine}`;\n}\n\n/**\n * Transform error into a zen meditation style response\n * @param {string} error - The error message\n * @returns {string} Zen meditation response\n */\nfunction zenTransformer(error) {\n  // Extract key parts from the error\n  const errorType = error.split(':')[0] || 'Error';\n  const errorDetails = error.split(':')[1] || '';\n  \n  // Zen meditation phrases\n  const openings = [\n    \"In the silence between keystrokes\",\n    \"Breathe in the error, breathe out the solution\",\n    \"The code that breaks teaches us the most\",\n    \"When the program crashes, listen closely\",\n    \"The bug is not your enemy, but your teacher\",\n    \"In the garden of programming\",\n    \"The wise developer sees errors as guides\",\n    \"Sit with your error in mindful awareness\",\n    \"The path to clean code is paved with errors\",\n    \"Like water flowing around rocks\"\n  ];\n  \n  // Middle phrases based on error types\n  const middles = {\n    TypeError: [\n      \"types flow into one another like rivers to the sea\",\n      \"confusion between what is and what appears to be\",\n      \"the nature of objects reveals itself through errors\",\n      \"expectations and reality stand apart\"\n    ],\n    ReferenceError: [\n      \"we seek what is not there, yet learn what is\",\n      \"absence teaches us about presence\",\n      \"the empty space holds as much meaning as the filled\",\n      \"we learn the value of preparation and initialization\"\n    ],\n    SyntaxError: [\n      \"form and structure create meaning\",\n      \"the grammar of code speaks of deeper patterns\",\n      \"order emerges from careful attention to detail\",\n      \"each symbol must find its proper place\"\n    ],\n    Default: [\n      \"we find the path by noticing where we stumble\",\n      \"errors illuminate the way forward\",\n      \"patience reveals what haste conceals\",\n      \"the obstacle becomes the way\"\n    ]\n  };\n  \n  // Closing wisdom\n  const closings = [\n    \"Return to your code with fresh eyes.\",\n    \"The solution will appear when the mind is still.\",\n    \"Each error brings you closer to understanding.\",\n    \"This moment of confusion will pass.\",\n    \"Embrace the error as part of the journey.\",\n    \"The compiler speaks wisdom through its errors.\",\n    \"In debugging, we discover our assumptions.\",\n    \"The error is a gift that points to growth.\",\n    \"Let go of frustration; hold onto curiosity.\",\n    \"The path of learning is never straight.\"\n  ];\n  \n  // Select random elements\n  const opening = randomItem(openings);\n  const middle = randomItem(middles[errorType] || middles.Default);\n  const closing = randomItem(closings);\n  \n  // Combine into zen meditation\n  return `${opening}, ${middle}. ${closing}`;\n}\n\n// Import additional creative transformers\nimport {\n  shakespeareanTransformer,\n  filmNoirTransformer,\n  sciFiTransformer,\n  pirateTransformer,\n  westernTransformer,\n  superheroTransformer,\n  fantasyTransformer,\n  bMovieTransformer,\n  influencerTransformer,\n  legalTransformer,\n  recipeTransformer,\n  sportsTransformer\n} from './creative-transformers.js';\n\n// Export transformers\nexport {\n  confuciusTransformer,\n  haikuTransformer,\n  blameTransformer,\n  tarotTransformer,\n  motivationalTransformer,\n  techSupportTransformer,\n  poeticTransformer,\n  zenTransformer,\n  shakespeareanTransformer,\n  filmNoirTransformer,\n  sciFiTransformer,\n  pirateTransformer,\n  westernTransformer,\n  superheroTransformer,\n  fantasyTransformer,\n  bMovieTransformer,\n  influencerTransformer,\n  legalTransformer,\n  recipeTransformer,\n  sportsTransformer\n};","// Animation controller for Error Message Fortune Cookies\n// Handles all cookie animations and transitions\n\n/**\n * Animation controller for fortune cookies\n */\nclass CookieAnimator {\n  /**\n   * Create a new cookie animator\n   * @param {Object} options - Animation options\n   */\n  constructor(options = {}) {\n    this.options = {\n      crackDuration: 500,\n      paperDuration: 300,\n      paperDelay: 300,\n      ...options\n    };\n    \n    this.animationsEnabled = true;\n  }\n  \n  /**\n   * Enable or disable animations\n   * @param {boolean} enabled - Whether animations should be enabled\n   */\n  setAnimationsEnabled(enabled) {\n    this.animationsEnabled = enabled;\n  }\n  \n  /**\n   * Create the cookie SVG element\n   * @returns {string} SVG HTML\n   */\n  createCookieSVG() {\n    const animClass = this.animationsEnabled ? 'animated' : '';\n    \n    return `\n      <div class=\"cookie ${animClass}\">\n        <svg viewBox=\"0 0 200 100\" xmlns=\"http://www.w3.org/2000/svg\">\n          <!-- Cookie top half with texture -->\n          <path class=\"cookie-top\" d=\"M20,50 Q100,10 180,50\" stroke=\"#D2B48C\" stroke-width=\"10\" fill=\"#F5DEB3\" />\n          <circle class=\"cookie-chip\" cx=\"50\" cy=\"35\" r=\"4\" fill=\"#8B4513\" />\n          <circle class=\"cookie-chip\" cx=\"80\" cy=\"25\" r=\"3\" fill=\"#8B4513\" />\n          <circle class=\"cookie-chip\" cx=\"120\" cy=\"25\" r=\"4\" fill=\"#8B4513\" />\n          <circle class=\"cookie-chip\" cx=\"150\" cy=\"35\" r=\"3\" fill=\"#8B4513\" />\n          \n          <!-- Cookie bottom half with texture -->\n          <path class=\"cookie-bottom\" d=\"M20,50 Q100,90 180,50\" stroke=\"#D2B48C\" stroke-width=\"10\" fill=\"#F5DEB3\" />\n          <circle class=\"cookie-chip\" cx=\"60\" cy=\"65\" r=\"3\" fill=\"#8B4513\" />\n          <circle class=\"cookie-chip\" cx=\"100\" cy=\"75\" r=\"4\" fill=\"#8B4513\" />\n          <circle class=\"cookie-chip\" cx=\"140\" cy=\"65\" r=\"3\" fill=\"#8B4513\" />\n          \n          <!-- Fortune paper with fold -->\n          <path class=\"fortune-paper\" d=\"M85,50 L115,50 L115,20 L100,30 L85,20 Z\" fill=\"white\" stroke=\"#EEEEEE\" stroke-width=\"1\" />\n          <line class=\"fortune-fold\" x1=\"100\" y1=\"30\" x2=\"100\" y2=\"50\" stroke=\"#EEEEEE\" stroke-width=\"1\" />\n        </svg>\n      </div>\n    `;\n  }\n  \n  /**\n   * Animate the cookie cracking open\n   * @param {HTMLElement} cookieElement - The cookie element to animate\n   * @returns {Promise} Promise that resolves when animation is complete\n   */\n  crackCookie(cookieElement) {\n    return new Promise((resolve) => {\n      if (!this.animationsEnabled) {\n        cookieElement.classList.add('cracked');\n        resolve();\n        return;\n      }\n      \n      // Add cracked class after a small delay\n      setTimeout(() => {\n        cookieElement.classList.add('cracked');\n        \n        // Resolve after animation completes\n        setTimeout(resolve, this.options.crackDuration);\n      }, 50);\n    });\n  }\n  \n  /**\n   * Animate the fortune paper appearing\n   * @param {HTMLElement} fortuneContent - The fortune content element\n   * @returns {Promise} Promise that resolves when animation is complete\n   */\n  showFortune(fortuneContent) {\n    return new Promise((resolve) => {\n      if (!this.animationsEnabled) {\n        fortuneContent.classList.add('visible');\n        resolve();\n        return;\n      }\n      \n      // Show fortune after paper animation delay\n      setTimeout(() => {\n        fortuneContent.classList.add('visible');\n        \n        // Resolve after animation completes\n        setTimeout(resolve, this.options.paperDuration);\n      }, this.options.paperDelay);\n    });\n  }\n  \n  /**\n   * Perform the complete cookie animation sequence\n   * @param {HTMLElement} cookieElement - The cookie element\n   * @param {HTMLElement} fortuneContent - The fortune content element\n   * @returns {Promise} Promise that resolves when all animations are complete\n   */\n  async animateSequence(cookieElement, fortuneContent) {\n    // First crack the cookie\n    await this.crackCookie(cookieElement);\n    \n    // Then show the fortune\n    await this.showFortune(fortuneContent);\n    \n    return true;\n  }\n  \n  /**\n   * Reset animations to initial state\n   * @param {HTMLElement} cookieElement - The cookie element\n   * @param {HTMLElement} fortuneContent - The fortune content element\n   */\n  reset(cookieElement, fortuneContent) {\n    cookieElement.classList.remove('cracked');\n    fortuneContent.classList.remove('visible');\n  }\n}\n\nexport default CookieAnimator;","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","// Main entry point for Error Message Fortune Cookies\nimport { \n  confuciusTransformer,\n  haikuTransformer,\n  blameTransformer,\n  tarotTransformer,\n  motivationalTransformer,\n  techSupportTransformer,\n  poeticTransformer,\n  zenTransformer,\n  shakespeareanTransformer,\n  filmNoirTransformer,\n  sciFiTransformer,\n  pirateTransformer,\n  westernTransformer,\n  superheroTransformer,\n  fantasyTransformer,\n  bMovieTransformer,\n  influencerTransformer,\n  legalTransformer,\n  recipeTransformer,\n  sportsTransformer\n} from './core/transformers.js';\nimport CookieAnimator from './ui/animations.js';\nimport html2canvas from 'html2canvas';\n\n// Namespace for the application\nconst ErrorFortune = (function() {\n  // Private variables\n  let config = {\n    animation: true,\n    defaultStyle: 'confucius',\n    defaultTheme: 'zen',\n    maxHistory: 10,\n    maxFavorites: 20\n  };\n  \n  // Cache DOM elements\n  let elements = {};\n  \n  // Initialize animator\n  const animator = new CookieAnimator();\n  \n  /**\n   * Initialize the application\n   * @param {Object} options - Configuration options\n   */\n  function init(options = {}) {\n    // Merge options with defaults\n    config = { ...config, ...options };\n    \n    // Set animation state\n    animator.setAnimationsEnabled(config.animation);\n    \n    // Cache DOM elements\n    cacheElements();\n    \n    // Set up event listeners\n    bindEvents();\n    \n    // Initialize custom elements\n    initCustomElements();\n    \n    // Initialize tooltips\n    initTooltips();\n    \n    // Setup system theme detection\n    setupSystemThemeDetection();\n    \n    // Initialize storage\n    initStorage();\n    \n    // Check for URL parameters\n    checkUrlParameters();\n    \n    // Add skip link for accessibility\n    addSkipLink();\n    \n    // Optimize performance\n    optimizePerformance();\n    \n    console.log('Error Fortune Cookies initialized');\n  }\n  \n  /**\n   * Add skip link for accessibility\n   */\n  function addSkipLink() {\n    // Defensive check for document.body, which can be an issue in some test environments\n    if (!document.body) {\n      return;\n    }\n    const skipLink = document.createElement('a');\n    skipLink.href = '#fortune-display';\n    skipLink.className = 'skip-link';\n    skipLink.textContent = 'Skip to fortune display';\n    document.body.insertBefore(skipLink, document.body.firstChild);\n  }\n  \n  /**\n   * Optimize performance\n   */\n  function optimizePerformance() {\n    // Use requestIdleCallback for non-critical operations\n    if ('requestIdleCallback' in window) {\n      window.requestIdleCallback(() => {\n        // Preload html2canvas for faster image generation\n        import('html2canvas').catch(err => console.error('Error preloading html2canvas:', err));\n        \n        // Clean up old data\n        cleanupOldData();\n      });\n    }\n    \n    // Use IntersectionObserver for lazy loading\n    if ('IntersectionObserver' in window) {\n      const lazyLoadObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const section = entry.target;\n            if (section.id === 'history-section') {\n              loadHistory();\n            } else if (section.id === 'favorites-section') {\n              loadFavorites();\n            }\n            observer.unobserve(section);\n          }\n        });\n      });\n      \n      // Observe history and favorites sections\n      const historySectionEl = document.getElementById('history-section');\n      const favoritesSectionEl = document.getElementById('favorites-section');\n      \n      if (historySectionEl) lazyLoadObserver.observe(historySectionEl);\n      if (favoritesSectionEl) lazyLoadObserver.observe(favoritesSectionEl);\n    }\n  }\n  \n  /**\n   * Clean up old data\n   */\n  function cleanupOldData() {\n    try {\n      // Clean up history if it's too large\n      let history = getHistory();\n      if (history.length > config.maxHistory * 2) {\n        history = history.slice(0, config.maxHistory);\n        localStorage.setItem('errorFortuneHistory', JSON.stringify(history));\n      }\n      \n      // Clean up favorites if it's too large\n      let favorites = getFavorites();\n      if (favorites.length > config.maxFavorites * 2) {\n        favorites = favorites.slice(0, config.maxFavorites);\n        localStorage.setItem('errorFortuneFavorites', JSON.stringify(favorites));\n      }\n    } catch (error) {\n      console.error('Error cleaning up old data:', error);\n    }\n  }\n  \n  /**\n   * Initialize storage for history and favorites\n   */\n  function initStorage() {\n    // Create history container if it doesn't exist\n    if (!elements.historyContainer) {\n      elements.historyContainer = document.getElementById('history-container');\n    }\n    \n    // Create favorites container if it doesn't exist\n    if (!elements.favoritesContainer) {\n      elements.favoritesContainer = document.getElementById('favorites-container');\n    }\n    \n    // Load and display history and favorites\n    if (elements.historyContainer) {\n      loadHistory();\n    }\n    \n    if (elements.favoritesContainer) {\n      loadFavorites();\n    }\n  }\n  \n  /**\n   * Setup system theme detection\n   */\n  function setupSystemThemeDetection() {\n    // Check if we should use system theme\n    const useSystemTheme = document.getElementById('use-system-theme');\n    \n    if (useSystemTheme) {\n      // Set initial state based on localStorage\n      const savedPreference = localStorage.getItem('useSystemTheme');\n      useSystemTheme.checked = savedPreference === null ? true : savedPreference === 'true';\n      \n      // Apply system theme if enabled\n      if (useSystemTheme.checked) {\n        applySystemTheme();\n      }\n      \n      // Add event listener for changes\n      useSystemTheme.addEventListener('change', (e) => {\n        localStorage.setItem('useSystemTheme', e.target.checked);\n        \n        if (e.target.checked) {\n          applySystemTheme();\n        }\n      });\n      \n      // Listen for system theme changes\n      const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      darkModeMediaQuery.addEventListener('change', () => {\n        if (useSystemTheme.checked) {\n          applySystemTheme();\n        }\n      });\n    }\n  }\n  \n  /**\n   * Apply system theme based on user's OS preference\n   */\n  function applySystemTheme() {\n    const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const themeToApply = isDarkMode ? 'dark' : 'light';\n    \n    // Set the theme radio button\n    const themeRadio = document.querySelector('input[name=\"theme\"][value=\"' + themeToApply + '\"]');\n    if (themeRadio) {\n      themeRadio.checked = true;\n    }\n    \n    // Update any active fortune display\n    const fortuneDisplay = document.getElementById('fortune-display');\n    if (fortuneDisplay && fortuneDisplay.classList.contains('fortune-display')) {\n      // Remove existing theme classes\n      ['zen', 'chaos', 'dark', 'light'].forEach(theme => {\n        fortuneDisplay.classList.remove(theme);\n      });\n      \n      // Add new theme class\n      fortuneDisplay.classList.add(themeToApply);\n    }\n  }\n  \n  /**\n   * Initialize tooltips for better UX\n   */\n  function initTooltips() {\n    const tooltipElements = document.querySelectorAll('[data-tooltip]');\n    \n    tooltipElements.forEach(element => {\n      // Create tooltip element\n      const tooltip = document.createElement('div');\n      tooltip.className = 'tooltip';\n      tooltip.textContent = element.getAttribute('data-tooltip');\n      \n      // Add tooltip to element\n      element.appendChild(tooltip);\n      \n      // Add event listeners\n      element.addEventListener('mouseenter', () => {\n        tooltip.classList.add('visible');\n      });\n      \n      element.addEventListener('mouseleave', () => {\n        tooltip.classList.remove('visible');\n      });\n    });\n  }\n  \n  /**\n   * Cache DOM elements for later use\n   */\n  function cacheElements() {\n    elements.form = document.getElementById('error-form');\n    elements.errorInput = document.getElementById('error-message');\n    elements.fortuneDisplay = document.getElementById('fortune-display');\n    elements.fortuneActions = document.getElementById('fortune-actions');\n    elements.embedSection = document.getElementById('embed-code-section');\n    elements.embedCodeDisplay = document.getElementById('embed-code-display');\n    elements.jsApiDisplay = document.getElementById('js-api-display');\n    elements.historyContainer = document.getElementById('history-container');\n    elements.favoritesContainer = document.getElementById('favorites-container');\n\n    // Homepage UI elements\n    elements.heroCookie = document.querySelector('.hero .cookie');\n    elements.styleOptions = document.querySelectorAll('.style-option');\n    elements.themeOptions = document.querySelectorAll('.theme-option');\n    elements.tabButtons = document.querySelectorAll('.tab-button');\n    elements.tabPanes = document.querySelectorAll('.tab-pane');\n  }\n  \n  /**\n   * Set up event listeners\n   */\n  function bindEvents() {\n    // Form submission\n    if (elements.form) {\n      elements.form.addEventListener('submit', handleFormSubmit);\n    }\n    \n    // Homepage UI events\n    bindHomepageUIEvents();\n\n    // Action buttons\n    if (elements.fortuneActions) {\n      const copyImageBtn = document.getElementById('copy-image');\n      if (copyImageBtn) copyImageBtn.addEventListener('click', copyAsImage);\n      \n      const copyLinkBtn = document.getElementById('copy-link');\n      if (copyLinkBtn) copyLinkBtn.addEventListener('click', copyLink);\n      \n      const downloadBtn = document.getElementById('download');\n      if (downloadBtn) downloadBtn.addEventListener('click', downloadFortune);\n      \n      const embedCodeBtn = document.getElementById('embed-code');\n      if (embedCodeBtn) embedCodeBtn.addEventListener('click', showEmbedCode);\n      \n      // Social sharing buttons\n      const twitterBtn = document.getElementById('share-twitter');\n      if (twitterBtn) twitterBtn.addEventListener('click', () => shareToSocial('twitter'));\n      \n      const facebookBtn = document.getElementById('share-facebook');\n      if (facebookBtn) facebookBtn.addEventListener('click', () => shareToSocial('facebook'));\n      \n      const linkedinBtn = document.getElementById('share-linkedin');\n      if (linkedinBtn) linkedinBtn.addEventListener('click', () => shareToSocial('linkedin'));\n    }\n    \n    // Copy buttons\n    if (elements.embedSection) {\n      const copyEmbedBtn = document.getElementById('copy-embed');\n      if (copyEmbedBtn) {\n        copyEmbedBtn.addEventListener('click', () => {\n          copyToClipboard(elements.embedCodeDisplay.textContent);\n          showToast('Embed code copied!');\n        });\n      }\n      \n      const copyJsBtn = document.getElementById('copy-js');\n      if (copyJsBtn) {\n        copyJsBtn.addEventListener('click', () => {\n          copyToClipboard(elements.jsApiDisplay.textContent);\n          showToast('API code copied!');\n        });\n      }\n    }\n  }\n  \n  /**\n   * Check URL parameters for fortune generation\n   */\n  function checkUrlParameters() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const errorParam = urlParams.get('error');\n    \n    if (errorParam) {\n      const style = urlParams.get('style') || config.defaultStyle;\n      const theme = urlParams.get('theme') || config.defaultTheme;\n      \n      // Set form values\n      if (elements.errorInput) {\n        elements.errorInput.value = decodeURIComponent(errorParam);\n      }\n      \n      // Set style radio\n      const styleRadio = document.querySelector('input[name=\"style\"][value=\"' + style + '\"]');\n      if (styleRadio) {\n        styleRadio.checked = true;\n      }\n      \n      // Set theme radio\n      const themeRadio = document.querySelector('input[name=\"theme\"][value=\"' + theme + '\"]');\n      if (themeRadio) {\n        themeRadio.checked = true;\n      }\n      \n      // Generate fortune\n      setTimeout(() => {\n        crack(decodeURIComponent(errorParam), {\n          style,\n          theme,\n          target: 'fortune-display'\n        });\n      }, 500);\n    }\n  }\n  \n  /**\n   * Handle form submission\n   * @param {Event} e - Form submit event\n   */\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    \n    const errorMessage = elements.errorInput.value.trim();\n    if (!errorMessage) {\n      showValidationError(elements.errorInput, 'Please enter an error message');\n      return;\n    } else {\n      clearValidationError(elements.errorInput);\n    }\n    \n    const styleRadio = document.querySelector('input[name=\"style\"]:checked');\n    const themeRadio = document.querySelector('input[name=\"theme\"]:checked');\n    \n    const style = styleRadio ? styleRadio.value : config.defaultStyle;\n    const theme = themeRadio ? themeRadio.value : config.defaultTheme;\n    \n    crack(errorMessage, {\n      style,\n      theme,\n      target: 'fortune-display',\n      nonce: Date.now() // Cache-busting nonce\n    });\n  }\n  \n  /**\n   * Show validation error for an input\n   * @param {HTMLElement} input - The input element\n   * @param {string} message - The error message\n   */\n  function showValidationError(input, message) {\n    // Clear any existing error\n    clearValidationError(input);\n    \n    // Add error class to input\n    input.classList.add('error-input');\n    \n    // Create error message element\n    const errorElement = document.createElement('div');\n    errorElement.className = 'validation-error';\n    errorElement.textContent = message;\n    \n    // Insert after input\n    input.parentNode.insertBefore(errorElement, input.nextSibling);\n    \n    // Focus input\n    input.focus();\n    \n    // Add shake animation\n    input.classList.add('shake');\n    setTimeout(() => {\n      input.classList.remove('shake');\n    }, 500);\n  }\n  \n  /**\n   * Clear validation error for an input\n   * @param {HTMLElement} input - The input element\n   */\n  function clearValidationError(input) {\n    // Remove error class\n    input.classList.remove('error-input');\n    \n    // Remove error message\n    const errorElement = input.parentNode.querySelector('.validation-error');\n    if (errorElement) {\n      errorElement.parentNode.removeChild(errorElement);\n    }\n  }\n  \n  /**\n   * Main function to generate and display a fortune\n   * @param {string} errorMessage - The error message to transform\n   * @param {Object} options - Configuration options\n   */\n  function crack(errorMessage, options = {}) {\n    // Merge options with defaults\n    const opts = {\n      style: config.defaultStyle,\n      theme: config.defaultTheme,\n      animation: config.animation,\n      target: null,\n      callback: null,\n      saveToHistory: true,\n      ...options\n    };\n    \n    // Show loading state if target is provided\n    let targetElement = null;\n    if (opts.target) {\n      targetElement = typeof opts.target === 'string' \n        ? document.getElementById(opts.target) \n        : opts.target;\n          \n      if (targetElement) {\n        showLoadingState(targetElement);\n      }\n    }\n    \n    // Generate the fortune (with error handling)\n    let fortune;\n    try {\n      fortune = generateFortune(errorMessage, opts.style);\n      \n      // Save to history if enabled\n      if (opts.saveToHistory) {\n        addToHistory(fortune);\n      }\n      \n      // Display the fortune\n      if (targetElement) {\n        // Use setTimeout to allow the loading animation to be visible\n        setTimeout(() => {\n          displayFortune(targetElement, fortune, opts);\n          \n          // Show action buttons\n          if (elements.fortuneActions) {\n            elements.fortuneActions.classList.remove('hidden');\n          }\n          \n          // Update embed code\n          updateEmbedCode(errorMessage, opts);\n          \n          // Execute callback if provided\n          if (typeof opts.callback === 'function') {\n            opts.callback(fortune);\n          }\n        }, 300);\n      }\n    } catch (error) {\n      console.error('Error generating fortune:', error);\n      \n      // Show error state\n      if (targetElement) {\n        showErrorState(targetElement, error);\n      }\n      \n      // Execute callback with error\n      if (typeof opts.callback === 'function') {\n        opts.callback(null, error);\n      }\n      \n      return null;\n    }\n    \n    return fortune;\n  }\n  \n  /**\n   * Show loading state in the target element\n   * @param {HTMLElement} target - The element to show loading in\n   */\n  function showLoadingState(target) {\n    // Add loading class\n    target.className = 'fortune-display loading';\n    \n    // Create loading animation\n    target.innerHTML = `\n      <div class=\"loading-animation\">\n        <div class=\"cookie-loader\">\n          <div class=\"cookie-spinner\"></div>\n        </div>\n        <p class=\"loading-text\">Cracking fortune cookie...</p>\n      </div>\n    `;\n  }\n  \n  /**\n   * Show error state in the target element\n   * @param {HTMLElement} target - The element to show error in\n   * @param {Error} error - The error that occurred\n   */\n  function showErrorState(target, error) {\n    // Add error class\n    target.className = 'fortune-display error';\n    \n    // Create error message with fortune-style error\n    target.innerHTML = `\n      <div class=\"error-message\">\n        <div class=\"error-icon\">🥠</div>\n        <p class=\"error-text\">Fortune Cookie Crumbled</p>\n        <p class=\"error-details\">Even fortune cookies have bad days. Your wisdom got lost in translation.</p>\n        <button class=\"button small retry-button\">Crack Another Cookie</button>\n      </div>\n    `;\n    \n    // Add retry button handler\n    const retryButton = target.querySelector('.retry-button');\n    if (retryButton) {\n      retryButton.addEventListener('click', () => {\n        // Trigger form submission\n        if (elements.form) {\n          elements.form.dispatchEvent(new Event('submit'));\n        }\n      });\n    }\n  }\n  \n  /**\n   * Generate a fortune based on the error message and style\n   * @param {string} errorMessage - The error message to transform\n   * @param {string} style - The fortune style to use\n   * @returns {Object} The generated fortune\n   */\n  function generateFortune(errorMessage, style) {\n    // Get the appropriate transformer for the style\n    const transformer = transformers[style] || transformers.confucius;\n    \n    // Transform the error message\n    const wisdom = transformer(errorMessage);\n    \n    return {\n      original: errorMessage,\n      wisdom,\n      style,\n      timestamp: new Date().toISOString()\n    };\n  }\n  \n  /**\n   * Display a fortune in the target element\n   * @param {HTMLElement} target - The element to display the fortune in\n   * @param {Object} fortune - The fortune to display\n   * @param {Object} options - Display options\n   */\n  function displayFortune(target, fortune, options) {\n    // Clear previous content\n    target.innerHTML = '';\n    \n    // Add theme class\n    target.className = `fortune-display ${options.theme}`;\n    \n    // Add ARIA attributes for accessibility\n    target.setAttribute('role', 'region');\n    target.setAttribute('aria-live', 'polite');\n    target.setAttribute('aria-label', 'Fortune cookie result');\n    \n    // Create fortune elements\n    const fortuneElement = document.createElement('div');\n    fortuneElement.className = `fortune ${fortune.style}`;\n    \n    // Create cookie container\n    const cookieContainer = document.createElement('div');\n    cookieContainer.className = 'cookie-container';\n    \n    // Add cookie SVG\n    cookieContainer.innerHTML = animator.createCookieSVG();\n    \n    // Create fortune content\n    const fortuneContent = document.createElement('div');\n    fortuneContent.className = 'fortune-content';\n    \n    // Add error message\n    const errorElement = document.createElement('p');\n    errorElement.className = 'error';\n    errorElement.textContent = fortune.original;\n    fortuneContent.appendChild(errorElement);\n    \n    // Add wisdom\n    const wisdomElement = document.createElement('p');\n    wisdomElement.className = 'wisdom';\n    wisdomElement.innerHTML = fortune.wisdom;\n    fortuneContent.appendChild(wisdomElement);\n    \n    // Assemble the fortune\n    fortuneElement.appendChild(cookieContainer);\n    fortuneElement.appendChild(fortuneContent);\n    \n    // Add to target\n    target.appendChild(fortuneElement);\n    \n    // Add favorite button\n    const favoriteBtn = document.createElement('button');\n    favoriteBtn.id = 'favorite-fortune';\n    favoriteBtn.className = 'button small favorite-btn';\n    favoriteBtn.innerHTML = '★ Favorite';\n    favoriteBtn.setAttribute('aria-label', 'Add to favorites');\n    favoriteBtn.addEventListener('click', () => addToFavorites(fortune));\n    \n    // Add favorite button to target\n    target.appendChild(favoriteBtn);\n    \n    // Update favorite button state\n    updateFavoriteButtonState(fortune);\n    \n    // Trigger animation\n    const cookieElement = cookieContainer.querySelector('.cookie');\n    animator.animateSequence(cookieElement, fortuneContent);\n    \n    // Announce to screen readers\n    announceToScreenReader(`Fortune cookie cracked. Your error was: ${fortune.original}. Your fortune is: ${wisdomElement.textContent}`);\n  }\n  \n  /**\n   * Update the embed code displays\n   * @param {string} errorMessage - The error message\n   * @param {Object} options - The options used\n   */\n  function updateEmbedCode(errorMessage, options) {\n    if (elements.embedCodeDisplay) {\n      elements.embedCodeDisplay.textContent = \n        `<error-fortune message=\"${escapeHtml(errorMessage)}\" style=\"${options.style}\" theme=\"${options.theme}\"></error-fortune>`;\n    }\n    \n    if (elements.jsApiDisplay) {\n      elements.jsApiDisplay.textContent = \n        `ErrorFortune.crack(\"${escapeHtml(errorMessage)}\", {\\n  style: \"${options.style}\",\\n  theme: \"${options.theme}\"\\n});`;\n    }\n  }\n  \n  /**\n   * Show the embed code section\n   */\n  function showEmbedCode() {\n    if (elements.embedSection) {\n      elements.embedSection.classList.remove('hidden');\n      // Scroll to embed section\n      elements.embedSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n  \n  /**\n   * Copy the current fortune as an image\n   */\n  function copyAsImage() {\n    const fortuneDisplay = document.getElementById('fortune-display');\n    if (!fortuneDisplay) return;\n    \n    // Show loading indicator\n    const button = document.getElementById('copy-image');\n    const originalText = button.textContent;\n    button.textContent = 'Generating...';\n    button.disabled = true;\n    \n    // Generate image\n    generateFortuneImage(fortuneDisplay)\n      .then(imageUrl => {\n        // Copy to clipboard using Clipboard API\n        fetch(imageUrl)\n          .then(res => res.blob())\n          .then(blob => {\n            try {\n              navigator.clipboard.write([\n                new ClipboardItem({\n                  'image/png': blob\n                })\n              ]).then(() => {\n                showToast('Image copied to clipboard!');\n              }).catch(err => {\n                console.error('Could not copy image: ', err);\n                // Fallback - open image in new tab\n                window.open(imageUrl, '_blank');\n              });\n            } catch (err) {\n              console.error('Clipboard API not supported: ', err);\n              // Fallback - open image in new tab\n              window.open(imageUrl, '_blank');\n            }\n          });\n      })\n      .catch(err => {\n        console.error('Error generating image: ', err);\n        showToast('Could not generate image', 'error');\n      })\n      .finally(() => {\n        // Restore button\n        button.textContent = originalText;\n        button.disabled = false;\n      });\n  }\n  \n  /**\n   * Download the current fortune as an image\n   */\n  function downloadFortune() {\n    const fortuneDisplay = document.getElementById('fortune-display');\n    if (!fortuneDisplay) return;\n    \n    // Show loading indicator\n    const button = document.getElementById('download');\n    const originalText = button.textContent;\n    button.textContent = 'Generating...';\n    button.disabled = true;\n    \n    // Generate image\n    generateFortuneImage(fortuneDisplay)\n      .then(imageUrl => {\n        // Create download link\n        const link = document.createElement('a');\n        link.href = imageUrl;\n        link.download = `fortune-cookie-${new Date().getTime()}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        showToast('Fortune downloaded!');\n      })\n      .catch(err => {\n        console.error('Error generating image: ', err);\n        showToast('Could not generate image', 'error');\n      })\n      .finally(() => {\n        // Restore button\n        button.textContent = originalText;\n        button.disabled = false;\n      });\n  }\n  \n  /**\n   * Generate an image from a fortune element\n   * @param {HTMLElement} element - The element to convert to an image\n   * @returns {Promise<string>} - Promise resolving to the image URL\n   */\n  function generateFortuneImage(element) {\n    return new Promise((resolve, reject) => {\n      // Create a clone of the element to avoid modifying the original\n      const clone = element.cloneNode(true);\n      \n      // Add special class for image generation\n      clone.classList.add('for-image');\n      \n      // Append to body but hide it\n      clone.style.position = 'absolute';\n      clone.style.left = '-9999px';\n      clone.style.top = '-9999px';\n      document.body.appendChild(clone);\n      \n      // Add branding to the clone\n      const branding = document.createElement('div');\n      branding.className = 'fortune-branding';\n      branding.innerHTML = '<p>Error Message Fortune Cookies</p><p class=\"fortune-url\">errorcookies.com</p>';\n      clone.appendChild(branding);\n      \n      // Use html2canvas to convert to image\n      html2canvas(clone, {\n        backgroundColor: null,\n        scale: 2, // Higher resolution\n        logging: false,\n        allowTaint: true,\n        useCORS: true\n      }).then(canvas => {\n        // Convert canvas to image URL\n        const imageUrl = canvas.toDataURL('image/png');\n        \n        // Clean up\n        document.body.removeChild(clone);\n        \n        resolve(imageUrl);\n      }).catch(err => {\n        // Clean up on error\n        if (document.body.contains(clone)) {\n          document.body.removeChild(clone);\n        }\n        reject(err);\n      });\n    });\n  }\n  \n  /**\n   * Copy a shareable link to the current fortune\n   */\n  function copyLink() {\n    const errorMessage = elements.errorInput.value.trim();\n    const styleRadio = document.querySelector('input[name=\"style\"]:checked');\n    const themeRadio = document.querySelector('input[name=\"theme\"]:checked');\n    \n    const style = styleRadio ? styleRadio.value : config.defaultStyle;\n    const theme = themeRadio ? themeRadio.value : config.defaultTheme;\n    \n    // Create URL with parameters\n    const url = new URL(window.location.href);\n    url.searchParams.set('error', encodeURIComponent(errorMessage));\n    url.searchParams.set('style', style);\n    url.searchParams.set('theme', theme);\n    \n    copyToClipboard(url.toString());\n    showToast('Link copied to clipboard!');\n  }\n  \n  /**\n   * Share fortune to social media\n   * @param {string} platform - The social media platform to share to\n   */\n  function shareToSocial(platform) {\n    const errorMessage = elements.errorInput.value.trim();\n    const styleRadio = document.querySelector('input[name=\"style\"]:checked');\n    const themeRadio = document.querySelector('input[name=\"theme\"]:checked');\n    \n    const style = styleRadio ? styleRadio.value : config.defaultStyle;\n    const theme = themeRadio ? themeRadio.value : config.defaultTheme;\n    \n    // Create URL with parameters\n    const url = new URL(window.location.href);\n    url.searchParams.set('error', encodeURIComponent(errorMessage));\n    url.searchParams.set('style', style);\n    url.searchParams.set('theme', theme);\n    \n    const shareUrl = url.toString();\n    const shareText = `Check out this fortune cookie wisdom for my error: \"${errorMessage}\" #ErrorCookies`;\n    \n    let shareWindow;\n    \n    switch (platform) {\n      case 'twitter':\n        shareWindow = window.open(\n          `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(shareUrl)}`,\n          'share-twitter',\n          'width=550,height=420,resizable=yes,scrollbars=yes'\n        );\n        break;\n        \n      case 'facebook':\n        shareWindow = window.open(\n          `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`,\n          'share-facebook',\n          'width=550,height=420,resizable=yes,scrollbars=yes'\n        );\n        break;\n        \n      case 'linkedin':\n        shareWindow = window.open(\n          `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(shareUrl)}`,\n          'share-linkedin',\n          'width=550,height=420,resizable=yes,scrollbars=yes'\n        );\n        break;\n    }\n    \n    if (shareWindow) {\n      shareWindow.focus();\n    } else {\n      showToast('Could not open share window. Please check your popup blocker settings.', 'error');\n    }\n  }\n  \n  /**\n   * Show toast notification\n   * @param {string} message - The message to show\n   * @param {string} type - The type of toast (success, error, info)\n   */\n  function showToast(message, type = 'success') {\n    // Check if toast container exists, create if not\n    let toastContainer = document.getElementById('toast-container');\n    if (!toastContainer) {\n      toastContainer = document.createElement('div');\n      toastContainer.id = 'toast-container';\n      document.body.appendChild(toastContainer);\n    }\n    \n    // Create toast element\n    const toast = document.createElement('div');\n    toast.className = `toast ${type}`;\n    toast.textContent = message;\n    \n    // Add to container\n    toastContainer.appendChild(toast);\n    \n    // Trigger animation\n    setTimeout(() => {\n      toast.classList.add('show');\n    }, 10);\n    \n    // Remove after delay\n    setTimeout(() => {\n      toast.classList.remove('show');\n      setTimeout(() => {\n        if (toastContainer.contains(toast)) {\n          toastContainer.removeChild(toast);\n        }\n      }, 300);\n    }, 3000);\n  }\n  \n  /**\n   * Copy text to clipboard\n   * @param {string} text - The text to copy\n   */\n  function copyToClipboard(text) {\n    // Use modern clipboard API if available\n    if (navigator.clipboard && window.isSecureContext) {\n      navigator.clipboard.writeText(text).catch(err => {\n        console.error('Could not copy text: ', err);\n        fallbackCopyToClipboard(text);\n      });\n    } else {\n      fallbackCopyToClipboard(text);\n    }\n  }\n  \n  /**\n   * Fallback method to copy text to clipboard\n   * @param {string} text - The text to copy\n   */\n  function fallbackCopyToClipboard(text) {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    textarea.style.position = 'fixed';\n    textarea.style.opacity = '0';\n    document.body.appendChild(textarea);\n    textarea.select();\n    \n    try {\n      document.execCommand('copy');\n    } catch (err) {\n      console.error('Fallback: Could not copy text: ', err);\n      alert('Could not copy to clipboard. Please copy manually.');\n    }\n    \n    document.body.removeChild(textarea);\n  }\n  \n  /**\n   * Initialize custom elements for embedding\n   */\n  function initCustomElements() {\n    if (window.customElements && !customElements.get('error-fortune')) {\n      customElements.define('error-fortune', class extends HTMLElement {\n        connectedCallback() {\n          const message = this.getAttribute('message');\n          const style = this.getAttribute('style') || config.defaultStyle;\n          const theme = this.getAttribute('theme') || config.defaultTheme;\n          const animation = this.hasAttribute('animation') ? \n            this.getAttribute('animation') !== 'false' : config.animation;\n          \n          if (message) {\n            crack(message, {\n              style,\n              theme,\n              animation,\n              target: this\n            });\n          }\n        }\n      });\n    }\n  }\n  \n  /**\n   * Escape HTML special characters\n   * @param {string} html - The string to escape\n   * @returns {string} The escaped string\n   */\n  function escapeHtml(html) {\n    const div = document.createElement('div');\n    div.textContent = html;\n    return div.innerHTML;\n  }\n  \n  // Transformers for different fortune styles\n  const transformers = {\n    confucius: confuciusTransformer,\n    haiku: haikuTransformer,\n    tarot: tarotTransformer,\n    blame: blameTransformer,\n    motivational: motivationalTransformer,\n    techSupport: techSupportTransformer,\n    poetic: poeticTransformer,\n    zen: zenTransformer,\n    shakespeare: shakespeareanTransformer,\n    filmNoir: filmNoirTransformer,\n    sciFi: sciFiTransformer,\n    pirate: pirateTransformer,\n    western: westernTransformer,\n    superhero: superheroTransformer,\n    fantasy: fantasyTransformer,\n    bMovie: bMovieTransformer,\n    influencer: influencerTransformer,\n    legal: legalTransformer,\n    recipe: recipeTransformer,\n    sports: sportsTransformer\n  };\n  \n  /**\n   * Add a fortune to history\n   * @param {Object} fortune - The fortune to add\n   */\n  function addToHistory(fortune) {\n    // Get existing history\n    let history = getHistory();\n    \n    // Add new fortune to beginning\n    history.unshift({\n      ...fortune,\n      id: Date.now().toString()\n    });\n    \n    // Limit history size\n    if (history.length > config.maxHistory) {\n      history = history.slice(0, config.maxHistory);\n    }\n    \n    // Save to localStorage\n    localStorage.setItem('errorFortuneHistory', JSON.stringify(history));\n    \n    // Update UI if history container exists\n    if (elements.historyContainer) {\n      loadHistory();\n    }\n  }\n  \n  /**\n   * Get fortune history from localStorage\n   * @returns {Array} Array of fortune objects\n   */\n  function getHistory() {\n    try {\n      const history = localStorage.getItem('errorFortuneHistory');\n      return history ? JSON.parse(history) : [];\n    } catch (error) {\n      console.error('Error loading history:', error);\n      return [];\n    }\n  }\n  \n  /**\n   * Load and display fortune history\n   * @param {boolean} lazy - Whether to lazy load items\n   */\n  function loadHistory(lazy = true) {\n    if (!elements.historyContainer) return;\n    \n    const history = getHistory();\n    \n    // Clear container\n    elements.historyContainer.innerHTML = '';\n    \n    if (history.length === 0) {\n      elements.historyContainer.innerHTML = '<p class=\"empty-message\">No fortune history yet.</p>';\n      return;\n    }\n    \n    // Create history items\n    if (lazy && history.length > 5) {\n      // Only load first 5 items initially\n      history.slice(0, 5).forEach(fortune => {\n        const historyItem = createFortuneItem(fortune, 'history');\n        elements.historyContainer.appendChild(historyItem);\n      });\n      \n      // Add \"load more\" button if there are more items\n      if (history.length > 5) {\n        const loadMoreBtn = document.createElement('button');\n        loadMoreBtn.className = 'button load-more-btn';\n        loadMoreBtn.textContent = `Load ${history.length - 5} more items`;\n        loadMoreBtn.addEventListener('click', () => {\n          // Remove the button\n          loadMoreBtn.remove();\n          \n          // Load remaining items\n          history.slice(5).forEach(fortune => {\n            const historyItem = createFortuneItem(fortune, 'history');\n            elements.historyContainer.appendChild(historyItem);\n          });\n        });\n        \n        elements.historyContainer.appendChild(loadMoreBtn);\n      }\n    } else {\n      // Load all items\n      history.forEach(fortune => {\n        const historyItem = createFortuneItem(fortune, 'history');\n        elements.historyContainer.appendChild(historyItem);\n      });\n    }\n  }\n  \n  /**\n   * Add a fortune to favorites\n   * @param {Object} fortune - The fortune to add\n   */\n  function addToFavorites(fortune) {\n    // Get existing favorites\n    let favorites = getFavorites();\n    \n    // Check if already in favorites\n    const existingIndex = favorites.findIndex(f => \n      f.original === fortune.original && f.style === fortune.style);\n    \n    if (existingIndex >= 0) {\n      // Already in favorites, remove it (toggle behavior)\n      favorites.splice(existingIndex, 1);\n      showToast('Removed from favorites');\n    } else {\n      // Add new fortune to beginning\n      favorites.unshift({\n        ...fortune,\n        id: Date.now().toString()\n      });\n      \n      // Limit favorites size\n      if (favorites.length > config.maxFavorites) {\n        favorites = favorites.slice(0, config.maxFavorites);\n      }\n      \n      showToast('Added to favorites');\n    }\n    \n    // Save to localStorage\n    localStorage.setItem('errorFortuneFavorites', JSON.stringify(favorites));\n    \n    // Update UI if favorites container exists\n    if (elements.favoritesContainer) {\n      loadFavorites();\n    }\n    \n    // Update favorite button state\n    updateFavoriteButtonState(fortune);\n  }\n  \n  /**\n   * Get favorites from localStorage\n   * @returns {Array} Array of fortune objects\n   */\n  function getFavorites() {\n    try {\n      const favorites = localStorage.getItem('errorFortuneFavorites');\n      return favorites ? JSON.parse(favorites) : [];\n    } catch (error) {\n      console.error('Error loading favorites:', error);\n      return [];\n    }\n  }\n  \n  /**\n   * Load and display favorites\n   * @param {boolean} lazy - Whether to lazy load items\n   */\n  function loadFavorites(lazy = true) {\n    if (!elements.favoritesContainer) return;\n    \n    const favorites = getFavorites();\n    \n    // Clear container\n    elements.favoritesContainer.innerHTML = '';\n    \n    if (favorites.length === 0) {\n      elements.favoritesContainer.innerHTML = '<p class=\"empty-message\">No favorites yet.</p>';\n      return;\n    }\n    \n    // Create favorite items\n    if (lazy && favorites.length > 5) {\n      // Only load first 5 items initially\n      favorites.slice(0, 5).forEach(fortune => {\n        const favoriteItem = createFortuneItem(fortune, 'favorite');\n        elements.favoritesContainer.appendChild(favoriteItem);\n      });\n      \n      // Add \"load more\" button if there are more items\n      if (favorites.length > 5) {\n        const loadMoreBtn = document.createElement('button');\n        loadMoreBtn.className = 'button load-more-btn';\n        loadMoreBtn.textContent = `Load ${favorites.length - 5} more items`;\n        loadMoreBtn.addEventListener('click', () => {\n          // Remove the button\n          loadMoreBtn.remove();\n          \n          // Load remaining items\n          favorites.slice(5).forEach(fortune => {\n            const favoriteItem = createFortuneItem(fortune, 'favorite');\n            elements.favoritesContainer.appendChild(favoriteItem);\n          });\n        });\n        \n        elements.favoritesContainer.appendChild(loadMoreBtn);\n      }\n    } else {\n      // Load all items\n      favorites.forEach(fortune => {\n        const favoriteItem = createFortuneItem(fortune, 'favorite');\n        elements.favoritesContainer.appendChild(favoriteItem);\n      });\n    }\n  }\n  \n  /**\n   * Create a fortune item element for history or favorites\n   * @param {Object} fortune - The fortune object\n   * @param {string} type - The type of item ('history' or 'favorite')\n   * @returns {HTMLElement} The created element\n   */\n  function createFortuneItem(fortune, type) {\n    const item = document.createElement('div');\n    item.className = `fortune-item ${type}-item`;\n    item.dataset.id = fortune.id;\n    item.setAttribute('tabindex', '0'); // Make focusable for keyboard navigation\n    item.setAttribute('role', 'article'); // ARIA role for screen readers\n    \n    const header = document.createElement('div');\n    header.className = 'fortune-item-header';\n    \n    const timestamp = new Date(fortune.timestamp).toLocaleString();\n    \n    header.innerHTML = `\n      <div class=\"fortune-item-style\">${fortune.style}</div>\n      <div class=\"fortune-item-time\">${timestamp}</div>\n    `;\n    \n    const content = document.createElement('div');\n    content.className = 'fortune-item-content';\n    \n    content.innerHTML = `\n      <div class=\"fortune-item-error\">${fortune.original}</div>\n      <div class=\"fortune-item-wisdom\">${fortune.wisdom}</div>\n    `;\n    \n    const actions = document.createElement('div');\n    actions.className = 'fortune-item-actions';\n    \n    if (type === 'history') {\n      actions.innerHTML = `\n        <button class=\"button small favorite-btn\" title=\"Add to favorites\" aria-label=\"Add to favorites\">★</button>\n        <button class=\"button small restore-btn\" title=\"Restore this fortune\" aria-label=\"Restore this fortune\">Restore</button>\n      `;\n      \n      // Add event listeners\n      actions.querySelector('.favorite-btn').addEventListener('click', () => {\n        addToFavorites(fortune);\n      });\n      \n      actions.querySelector('.restore-btn').addEventListener('click', () => {\n        restoreFortune(fortune);\n      });\n    } else {\n      actions.innerHTML = `\n        <button class=\"button small remove-btn\" title=\"Remove from favorites\" aria-label=\"Remove from favorites\">✕</button>\n        <button class=\"button small restore-btn\" title=\"Restore this fortune\" aria-label=\"Restore this fortune\">Restore</button>\n      `;\n      \n      // Add event listeners\n      actions.querySelector('.remove-btn').addEventListener('click', () => {\n        addToFavorites(fortune); // This will toggle it off\n      });\n      \n      actions.querySelector('.restore-btn').addEventListener('click', () => {\n        restoreFortune(fortune);\n      });\n    }\n    \n    item.appendChild(header);\n    item.appendChild(content);\n    item.appendChild(actions);\n    \n    // Add keyboard navigation\n    item.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        restoreFortune(fortune);\n        e.preventDefault();\n      }\n    });\n    \n    return item;\n  }\n  \n  /**\n   * Restore a fortune from history or favorites\n   * @param {Object} fortune - The fortune to restore\n   */\n  function restoreFortune(fortune) {\n    // Set form values\n    if (elements.errorInput) {\n      elements.errorInput.value = fortune.original;\n    }\n    \n    // Set style radio\n    const styleRadio = document.querySelector('input[name=\"style\"][value=\"' + fortune.style + '\"]');\n    if (styleRadio) {\n      styleRadio.checked = true;\n    }\n    \n    // Generate fortune without saving to history (to avoid duplication)\n    crack(fortune.original, {\n      style: fortune.style,\n      target: 'fortune-display',\n      saveToHistory: false\n    });\n    \n    // Scroll to fortune display\n    elements.fortuneDisplay.scrollIntoView({ behavior: 'smooth' });\n  }\n  \n  /**\n   * Update favorite button state based on whether fortune is in favorites\n   * @param {Object} fortune - The current fortune\n   */\n  function updateFavoriteButtonState(fortune) {\n    const favoriteBtn = document.getElementById('favorite-fortune');\n    if (!favoriteBtn) return;\n    \n    const favorites = getFavorites();\n    const isFavorite = favorites.some(f => \n      f.original === fortune.original && f.style === fortune.style);\n    \n    if (isFavorite) {\n      favoriteBtn.classList.add('active');\n      favoriteBtn.title = 'Remove from favorites';\n      favoriteBtn.setAttribute('aria-label', 'Remove from favorites');\n      favoriteBtn.innerHTML = '★ Remove favorite';\n    } else {\n      favoriteBtn.classList.remove('active');\n      favoriteBtn.title = 'Add to favorites';\n      favoriteBtn.setAttribute('aria-label', 'Add to favorites');\n      favoriteBtn.innerHTML = '★ Add favorite';\n    }\n  }\n  \n  /**\n   * Announce a message to screen readers\n   * @param {string} message - The message to announce\n   */\n  function announceToScreenReader(message) {\n    // Create or get the live region\n    let liveRegion = document.getElementById('sr-live-region');\n    if (!liveRegion) {\n      liveRegion = document.createElement('div');\n      liveRegion.id = 'sr-live-region';\n      liveRegion.className = 'sr-only';\n      liveRegion.setAttribute('aria-live', 'assertive');\n      liveRegion.setAttribute('aria-atomic', 'true');\n      document.body.appendChild(liveRegion);\n    }\n    \n    // Set the message\n    liveRegion.textContent = message;\n    \n    // Clear after a delay\n    setTimeout(() => {\n      liveRegion.textContent = '';\n    }, 3000);\n  }\n  \n  /**\n   * Export history and favorites to a JSON file\n   */\n  function exportData() {\n    const data = {\n      history: getHistory(),\n      favorites: getFavorites(),\n      exportDate: new Date().toISOString()\n    };\n    \n    const dataStr = JSON.stringify(data, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = `error-fortune-data-${new Date().toISOString().slice(0, 10)}.json`;\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    \n    showToast('Data exported successfully');\n  }\n  \n  /**\n   * Import history and favorites from a JSON file\n   * @param {File} file - The JSON file to import\n   */\n  function importData(file) {\n    const reader = new FileReader();\n    \n    reader.onload = function(e) {\n      try {\n        const data = JSON.parse(e.target.result);\n        \n        if (data.history && Array.isArray(data.history)) {\n          localStorage.setItem('errorFortuneHistory', JSON.stringify(data.history));\n        }\n        \n        if (data.favorites && Array.isArray(data.favorites)) {\n          localStorage.setItem('errorFortuneFavorites', JSON.stringify(data.favorites));\n        }\n        \n        // Reload data\n        loadHistory();\n        loadFavorites();\n        \n        showToast('Data imported successfully');\n      } catch (error) {\n        console.error('Error importing data:', error);\n        showToast('Error importing data. Invalid format.', 'error');\n      }\n    };\n    \n    reader.readAsText(file);\n  }\n  /**\n   * Binds UI events for the homepage demo.\n   */\n  function bindHomepageUIEvents() {\n    // Simple animation for the hero cookie\n    if (elements.heroCookie) {\n      setTimeout(() => {\n        elements.heroCookie.classList.add('cracked');\n      }, 1000);\n    }\n\n    // Style option selection\n    if (elements.styleOptions) {\n      elements.styleOptions.forEach(option => {\n        option.addEventListener('click', function() {\n          elements.styleOptions.forEach(opt => opt.classList.remove('active'));\n          this.classList.add('active');\n        });\n      });\n    }\n\n    // Theme option selection\n    if (elements.themeOptions) {\n      elements.themeOptions.forEach(option => {\n        option.addEventListener('click', function() {\n          elements.themeOptions.forEach(opt => opt.classList.remove('active'));\n          this.classList.add('active');\n        });\n      });\n    }\n\n    // Tab switching\n    if (elements.tabButtons && elements.tabPanes) {\n      elements.tabButtons.forEach(button => {\n        button.addEventListener('click', function() {\n          const tabName = this.getAttribute('data-tab');\n\n          elements.tabButtons.forEach(btn => btn.classList.remove('active'));\n          elements.tabPanes.forEach(pane => pane.classList.remove('active'));\n\n          this.classList.add('active');\n          document.getElementById(`${tabName}-tab`).classList.add('active');\n        });\n      });\n    }\n\n    // Note: The form submission part of the original inline script is already\n    // handled by the main `handleFormSubmit` function. The inline script had a\n    // simplified demo version which is not needed, as the main logic is more robust.\n  }\n\n  // Public API\n  return {\n    init,\n    crack,\n    transformers,\n    addToFavorites,\n    exportData,\n    importData,\n    getHistory,\n    getFavorites\n  };\n})();\n\n// Auto-initialize if in browser context, but not in a test environment\nif (typeof window !== 'undefined' && process.env.NODE_ENV !== 'test') {\n  window.ErrorFortune = ErrorFortune;\n  \n  // Initialize when DOM is ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => ErrorFortune.init());\n  } else {\n    ErrorFortune.init();\n  }\n}\n\nexport default ErrorFortune;\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}